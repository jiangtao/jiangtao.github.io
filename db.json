{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/dev.jpg","path":"images/dev.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"3df5e86faeb0f239969dbf80f269017eea4d5184","modified":1518402680000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1518402680000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1518402680000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1518402680000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1518402680000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1518402680000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1518402680000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1518402680000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1518402680000},{"_id":"themes/next/README.en.md","hash":"32d6cdfec1447f54aae1d7f1365ce6733dfcec8f","modified":1518402680000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1518402680000},{"_id":"themes/next/_config.yml","hash":"b8543298e381e51fac86cbb58025bfc43f519d45","modified":1518402680000},{"_id":"themes/next/bower.json","hash":"7d7938f9da896fe710aa0e9120140e528bf058df","modified":1518402680000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1518402680000},{"_id":"themes/next/package.json","hash":"193dad6f59a588908fac082cc46fe067dac1b84d","modified":1518402680000},{"_id":"source/_posts/project-next-cli.md","hash":"f40af33336107bc44e163813a96b3af88599a947","modified":1518402680000},{"_id":"source/_posts/version-lock.md","hash":"8294c5e4794acc747b87d0074a09de712c4d98af","modified":1518402680000},{"_id":"source/_posts/puppeteer-start.md","hash":"09b5a02f9d8c4f3f626411252d275d41a322d605","modified":1518402680000},{"_id":"source/_posts/vue-mixin-apply.md","hash":"1c6fbfd63ec30b056e940dcc8b0e466edf5565f5","modified":1518402680000},{"_id":"source/_posts/vue-webp.md","hash":"44b71ba259d3d42ac45e8c096b483bb7a9e74238","modified":1518402680000},{"_id":"source/_posts/xss-live.md","hash":"31b2023d9fdaf50d6c84f7e8c8ecd102687ec1a2","modified":1518402680000},{"_id":"source/about/index.md","hash":"871c6d579820014ea5f9e580dab293cba5afb66d","modified":1518402680000},{"_id":"source/tags/index.md","hash":"94e1ce7cec105043e2e9da1c663c992d8b2d24df","modified":1518402680000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1518402680000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1518402680000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1518402680000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1518402680000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1518402680000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1518402680000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1518402680000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1518402680000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1518402680000},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1518402680000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1518402680000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1518402680000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1518402680000},{"_id":"themes/next/layout/_layout.swig","hash":"06b1eab2e00273e0b94bd32dc682bd92c1e0a747","modified":1518402680000},{"_id":"themes/next/layout/archive.swig","hash":"383f64deab105724fd5512371963bd9e9aafbffd","modified":1518402680000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1518402680000},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1518402680000},{"_id":"themes/next/layout/page.swig","hash":"37c874cd720acf0eda8d26e063278f2b6ae8d3a6","modified":1518402680000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1518402680000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1518402680000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1518402680000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1518402680000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1518402680000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1518402681000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1518402681000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1518402681000},{"_id":"source/images/dev.jpg","hash":"3f16b318ba65c8d53413610e343e477328ffa895","modified":1518402680000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1518402681000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1518402680000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1518402680000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1518402680000},{"_id":"themes/next/layout/_macro/post.swig","hash":"7b28c313e9cad30c9f6069751b343bce00b05657","modified":1518402680000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"53d4f83b2b7fb4387dfc9fe81519abd56fbce4ae","modified":1518402680000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"464cf1c94f5cf088986c9b1f331219670f60b1f2","modified":1518403625000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5d5f70deb6074cb4dd0438463e14ccf89213c282","modified":1518402680000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1518402680000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"ce7094ee05878161e7568a6dfae5b56ff3fbd6e1","modified":1518402680000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1518402680000},{"_id":"themes/next/layout/_partials/head.swig","hash":"1f14d3f494b2dbbcee802fd6f6d1abd5b7e2304c","modified":1518402680000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1518402680000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1518402680000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1518402680000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1518402680000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1518402680000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1518402680000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1518402680000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1518402680000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1518402680000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1518402680000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1518402680000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1518402680000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1518402680000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1518402680000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1518402680000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1518402680000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1518402680000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1518402680000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1518402680000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1518402680000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1518402680000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1518402680000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1518402681000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1518402681000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1518402681000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1518402681000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1518402681000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1518402681000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1518402681000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1518402681000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1518402681000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1518402681000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1518402681000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1518402681000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1518402681000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1518402681000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1518402681000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1518402680000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1518402680000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1518402680000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1518402680000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1518402680000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1518402681000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1518402681000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1518402680000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1518402680000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1518402680000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1518402680000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1518402680000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1518402680000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1518402680000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1518402680000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1518402680000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1518402680000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1518402680000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1518402680000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1518402680000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1518402680000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1518402680000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1518402680000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1518402680000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1518402680000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1518402680000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1518402680000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1518402680000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1518402680000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1518402680000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1518402680000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1518402680000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1518402680000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1518402680000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1518402680000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1518402680000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"ee63aa2e49507b884a2d56778479cf01c723d751","modified":1518402680000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1518402680000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1518402680000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1518402680000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1518402680000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1518402680000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1518402680000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"eaedfaf06dae94ba77a8f4893e2e434bf8859bac","modified":1518402680000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1518402680000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"49b5210fa62d6cbc6a98f57d89d5067a06ab3561","modified":1518402681000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1518402681000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"cfee25d790e4f9b7d57f0dc7e2ea9c1649f08f11","modified":1518402681000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d477196c5699c8261b08e993a77ef67054d86166","modified":1518402681000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1518402681000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1518402681000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1518402681000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1518402681000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1518402681000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1518402681000},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1518402681000},{"_id":"themes/next/source/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1518402681000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1518402681000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1518402681000},{"_id":"themes/next/source/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1518402681000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1518402681000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1518402681000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1518402681000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1518402681000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1518402681000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1518402681000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1518402681000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1518402681000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1518402681000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1518402681000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1518402681000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1518402681000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1518402681000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1518402681000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1518402681000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1518402681000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1518402681000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1518402681000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1518402681000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1518402681000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1518402681000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1518402681000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1518402681000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1518402681000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d026c8489f66ab6c12ad04bd37f1d5b6f2f3f0d1","modified":1518402680000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1518402680000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1518402680000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1518402680000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1518402680000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2915df7152ea095a6290ef69157fd67669e0e793","modified":1518402680000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"86b6fd7f1b1be3ae98f8af6b23a6b1299c670ce9","modified":1518402680000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1518402680000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1518402680000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"bc8c388553bbcf95897459a466ba35bffd5ec5f0","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1518402681000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1518402681000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1518402681000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1518402681000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1518402681000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1518402681000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1518402681000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1518402681000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1518402681000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"edd33a55177ea9e79c6e3d584881b0d3bc92bc9c","modified":1518403686000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1518402681000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1515228314000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1515228314000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1518402681000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1515228314000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1518402681000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1518402681000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1518402681000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1515228314000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1515228314000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1515228314000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1518402681000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1518402681000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"c51d3e042b3e0f8784c2990322e502ccb4802a88","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ee554b1031ef0070a5916477939021800e3c9d27","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"51eca243220cf57133a4becae9b78514bcfdc723","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"65a64d5662637b66e2f039a5f58217afe7a6e800","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1518402680000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1518402680000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1518402681000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1515228314000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1515228314000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1515228314000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1515228314000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1518402681000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1518402681000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1518402681000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1518402681000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1518402681000}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2018-01-07T15:12:30.000Z","_content":"\n前端**工程师**一枚，擅长javascript，Node。\n致力于做一个`发现问题`和`解决问题`的人。\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-01-07 23:12:30\n---\n\n前端**工程师**一枚，擅长javascript，Node。\n致力于做一个`发现问题`和`解决问题`的人。\n","updated":"2018-02-12T02:31:20.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjdjm44v20001ldvgl4i2asej","content":"<p>前端<strong>工程师</strong>一枚，擅长javascript，Node。<br>致力于做一个<code>发现问题</code>和<code>解决问题</code>的人。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前端<strong>工程师</strong>一枚，擅长javascript，Node。<br>致力于做一个<code>发现问题</code>和<code>解决问题</code>的人。</p>\n"},{"title":"tags","date":"2018-01-06T09:44:52.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-01-06 17:44:52\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-02-12T02:31:20.000Z","path":"tags/index.html","layout":"page","_id":"cjdjm44v40003ldvgz9lh343b","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"搭建一个通用的脚手架","date":"2018-01-29T11:53:36.000Z","issue":"https://github.com/jiangtao/blog/issues/23","_content":"\n在16年年底的时候，同事聊起脚手架。由于公司业务的`多样性`,前端的`灵活性`,让我们不得不思考更通用的脚手架。而不是伴随着前端技术的发展，不断的把时间花在`配置`上。于是[chef-cli](https://github.com/2046/chef-cli)诞生了。 18年年初，把过往一年的东西整理和总结下，重新增强了原有的脚手架[project-next-cli](https://github.com/ijs/project-next-cli), 不单单满足我们团队的需求，也可以满足其他人的需求。\n\n<!--more-->\n\n## project-next-cli\n\n面向的目标用户：\n\n- 公司业务杂，但有一定的积累\n- 爱折腾的同学和团队\n- 借助github大量开发模板开发\n\n![image](https://github.com/ijs/project-next-cli/raw/master/project-next-cli.gif)\n\n## 发展\n\n从本人做前端开始（13年），前端这几年处于高速发展，主要表现：\n\n备注：以下发展过程出现，请不要纠结出现顺序 [捂脸]\n\n- 库/框架：jQuery, backbone， angular，react，vue\n- 模块化：commonjs， AMD(CMD), UMD, es module\n- 任务管理器：npm scripts,  grunt, gulp\n- 模块打包工具： r.js, webpack, rollup, browserify\n- css预处理器：Sass, Less, Stylus, Postcss\n- 静态检查器：flow/typescript\n- 测试工具：mocha，jasmine，jest，ava\n- 代码检测工具：eslint，jslint\n\n## 开发\n\n当我们真实开发中，会遇到各种各样的业务需求（场景），根据需求和场景选用不同的技术栈，由于技术的进步和不同浏览器运行时的限制，不得不配置对应的环境等，导致我们从而满足业务需求。\n\n画了一张图来表示，业务，配置（环境），技术之间的关系\n\n![image](/images/dev.jpg)\n\n### 前端配置工程师\n\n于是明见流传了一个新的职业，前端配置工程师 O(∩_∩)O~\n\n## 社区现状\n\n### 专一的脚手架\n\n社区中存在着大量的专一型框架，主要针对一个目标任务做定制。比如下列脚手架\n\n1. [vue-cli](https://github.com/vuejs/vue-cli)\n\n`vue-cli`提供利用vue开发`webpack`, `pwa`等模板，本文脚手架参考了`vue-cli`的实现。\n\n2. [dva-cli](https://github.com/dvajs/dva-cli)\n\n`dva-cli`主要针对[dva](https://github.com/dvajs/dva)开发使用的脚手架\n\n3. [labrador](https://github.com/maichong/labrador)\n\n`labrador`是一种`微信小程序`组件化开发框架, 虽说小程序目前已经支持组件，但该脚手架的其他特性，依旧很赞。感兴趣的可以了解。\n\n社区中有很多优秀的专一型脚手架出现，这里不在列举。前端社区的火爆，让我辈前端汲取精华，不断前进。\n\n### 通用脚手架\n\n1. [yeoman](https://github.com/yeoman/yeoman)\n\n`yeoman`是一款强壮的且有一系列工具的通用型脚手架，但yeoman发布指定package名称，和用其开发工具。具体可[点击这里查看yeoman添加生成器规则](http://yeoman.io/generators/)\n\n## 开发初衷和目标\n\n由于金融公司形态决定了，业务类型多样，前端技术发展迭代，为了跟进社区发展，更好的完成下列目标而诞生。\n\n- 完成业务：专心，稳定，快速\n- 团队规范：代码规范，发布流程，持续集成/交付/部署\n- 沉淀：持续稳定的引入新技术\n- 效益：少加班，少造轮子，完成kpi，做更有意义的事儿\n\n## 实现准备\n\n依托于Github，根据`Github API`来实现，如下：\n\n1. 获取项目\n\n```bash\ncurl -i https://api.github.com/orgs/project-scaffold/repos\n```\n\n2. 获取版本\n\n```bash\ncurl -i https://api.github.com/repos/project-scaffold/cli/tags\n```\n\n## 具体实现逻辑\n\n根据`github api`获取到项目列表和版本号之后，就可以做一个通用的脚手架.\n\n### 下载\n\n1. 使用\n\n```bash\nproject i\n```\n\n2. 逻辑\n\n```\nGithub API ===> 获取项目列表 ===> 选择一个项目 ===> 获取项目版本号 ===> 选择一个版本号 ===> 下载到本地仓库\n```\n\n若中间每一步 数据为空/文件不存在 则给予提示\n\n3. 核心代码\n\n```js\n\n  // 获取github项目列表\n  const repos = await repoList();\n\n  choices = repos.map(({ name }) => name);\n  answers = await inquirer.prompt([\n    {\n      type   : 'list',\n      name   : 'repo',\n      message: 'which repo do you want to install?',\n      choices\n    }\n  ]);\n  // 选择的项目\n  const repo = answers.repo;\n\n  // 项目的版本号劣币爱哦\n  const tags = await tagList(repo);\n\n  if (tags.length === 0) {\n    version = '';\n  } else {\n    choices = tags.map(({ name }) => name);\n\n    answers = await inquirer.prompt([\n      {\n        type   : 'list',\n        name   : 'version',\n        message: 'which version do you want to install?',\n        choices\n      }\n    ]);\n    version = answers.version;\n  }\n  // 下载\n  await download([repo, version].join('@'));\n```\n\n### 生成项目\n\n1. 使用\n\n```bash\nproject init\n```\n\n2. 逻辑\n\n```\n获取本地仓库列表 ===> 选择一个本地项目 ===> 输入基本信息 ===> 编译生成到临时文件 ===> 复制并重名到目标目录\n```\n\n若中间每一步 数据为空/文件不存在/生成目录已重复 则给予提示\n\n3. 核心代码\n\n```js\n\n  // 获取本地仓库项目\n  const list = await readdir(dirs.download);\n\n  // 基本信息\n  const answers = await inquirer.prompt([\n    {\n      type   : 'list',\n      name   : 'scaffold',\n      message: 'which scaffold do you want to init?',\n      choices: list\n    }, {\n      type   : 'input',\n      name   : 'dir',\n      message: 'project name',\n      // 必要的验证\n      async validate(input) {\n        const done = this.async();\n\n        if (input.length === 0) {\n          done('You must input project name');\n          return;\n        }\n\n        const dir = resolve(process.cwd(), input);\n\n        if (await exists(dir)) {\n          done('The project name is already existed. Please change another name');\n        }\n\n        done(null, true);\n      }\n    }\n  ]);\n  const metalsmith = await rc('metalsmith');\n  if (metalsmith) {\n    const tmp = `${dirs.tmp}/${answers.scaffold}`;\n    // 复制一份到临时目录，在临时目录编译生成\n    await copy(`${dirs.download}/${answers.scaffold}`, tmp);\n    await metal(answers.scaffold);\n    await copy(`${tmp}/${dirs.metalsmith}`, answers.dir);\n    // 删除临时目录\n    await rmfr(tmp);\n  } else {\n    await copy(`${dirs.download}/${answers.scaffold}`, answers.dir);\n  }\n```\n\n### 升级/降级版本\n\n1. 使用\n\n```bash\nproject update\n```\n\n2. 逻辑\n\n```\n获取本地仓库列表 ===> 选择一个本地项目 ===> 获取版本信息列表 ===> 选择一个版本 ===> 覆盖原有的版本文件\n```\n\n若中间每一步 数据为空/文件不存在 则给予提示\n\n3. 核心代码\n\n```js\n  // 获取本地仓库列表\n  const list = await readdir(dirs.download);\n\n  // 选择一个要升级的项目\n  answers = await inquirer.prompt([\n    {\n      type   : 'list',\n      name   : 'scaffold',\n      message: 'which scaffold do you want to update?',\n      choices: list,\n      async validate(input) {\n        const done = this.async();\n\n        if (input.length === 0) {\n          done('You must choice one scaffold to update the version. If not update, Ctrl+C');\n          return;\n        }\n\n        done(null, true);\n      }\n    }\n  ]);\n\n  const repo = answers.scaffold;\n\n  // 获取该项目的版本信息\n  const tags = await tagList(repo);\n\n  if (tags.length === 0) {\n    version = '';\n  } else {\n    choices = tags.map(({ name }) => name);\n\n    answers = await inquirer.prompt([\n      {\n        type   : 'list',\n        name   : 'version',\n        message: 'which version do you want to install?',\n        choices\n      }\n    ]);\n    version = answers.version;\n  }\n  // 下载覆盖文件\n  await download([repo, version].join('@'))\n```\n\n### 配置\n\n配置用来获取脚手架的基本设置， 如registry, type等基本信息。\n\n1. 使用\n\n```bash\nproject config set registry koajs # 设置本地仓库下载源\n\nproject config get registry # 获取本地仓库设置的属性\n\nproject config delete registry # 删除本地设置的属性\n```\n\n2. 逻辑\n\n```\n判定本地设置文件存在 ===> 读/写\n```\n\n若中间每一步 数据为空/文件不存在 则给予提示\n\n3. 核心代码\n\n```js\nswitch (action) {\n    case 'get':\n      console.log(await rc(k));\n      console.log('');\n      return true;\n\n    case 'set':\n      await rc(k, v);\n      return true;\n\n    case 'remove':\n      await rc(k, v, true);\n      return true;\n\n    default:\n      console.log(await rc());\n```\n\n### 搜索\n\n搜索远程的github仓库有哪些项目列表\n\n1. 使用\n\n```bash\n\nproject search\n\n```\n\n2. 逻辑\n\n```\n获取github项目列表 ===> 输入搜索的内容 ===> 返回匹配的列表\n```\n\n若中间每一步 数据为空 则给予提示\n\n3. 核心代码\n\n```js\n const answers = await inquirer.prompt([\n    {\n      type   : 'input',\n      name   : 'search',\n      message: 'search repo'\n    }\n  ]);\n\n  if (answers.search) {\n    let list = await searchList();\n\n    list = list\n      .filter(item => item.name.indexOf(answers.search) > -1)\n      .map(({ name }) => name);\n\n    console.log('');\n\t  if (list.length === 0) {\n\t\t  console.log(`${answers.search} is not found`);\n\t  }\n\t  console.log(list.join('\\n'));\n\t  console.log('');\n  }\n```\n\n\n## 总结\n\n以上是具体实现，该脚手架目前还有一些可以优化的地方：\n\n1. 不同源，存储不同的文件\n2. 支持离线功能\n\n硬广：如果您觉得好用，欢迎star，也欢迎fork一块维护。\n","source":"_posts/project-next-cli.md","raw":"---\ntitle: 搭建一个通用的脚手架\ndate: 2018-01-29 19:53:36\ntags:\n - cli\n - Node\n - 脚手架\n\nissue: https://github.com/jiangtao/blog/issues/23\n---\n\n在16年年底的时候，同事聊起脚手架。由于公司业务的`多样性`,前端的`灵活性`,让我们不得不思考更通用的脚手架。而不是伴随着前端技术的发展，不断的把时间花在`配置`上。于是[chef-cli](https://github.com/2046/chef-cli)诞生了。 18年年初，把过往一年的东西整理和总结下，重新增强了原有的脚手架[project-next-cli](https://github.com/ijs/project-next-cli), 不单单满足我们团队的需求，也可以满足其他人的需求。\n\n<!--more-->\n\n## project-next-cli\n\n面向的目标用户：\n\n- 公司业务杂，但有一定的积累\n- 爱折腾的同学和团队\n- 借助github大量开发模板开发\n\n![image](https://github.com/ijs/project-next-cli/raw/master/project-next-cli.gif)\n\n## 发展\n\n从本人做前端开始（13年），前端这几年处于高速发展，主要表现：\n\n备注：以下发展过程出现，请不要纠结出现顺序 [捂脸]\n\n- 库/框架：jQuery, backbone， angular，react，vue\n- 模块化：commonjs， AMD(CMD), UMD, es module\n- 任务管理器：npm scripts,  grunt, gulp\n- 模块打包工具： r.js, webpack, rollup, browserify\n- css预处理器：Sass, Less, Stylus, Postcss\n- 静态检查器：flow/typescript\n- 测试工具：mocha，jasmine，jest，ava\n- 代码检测工具：eslint，jslint\n\n## 开发\n\n当我们真实开发中，会遇到各种各样的业务需求（场景），根据需求和场景选用不同的技术栈，由于技术的进步和不同浏览器运行时的限制，不得不配置对应的环境等，导致我们从而满足业务需求。\n\n画了一张图来表示，业务，配置（环境），技术之间的关系\n\n![image](/images/dev.jpg)\n\n### 前端配置工程师\n\n于是明见流传了一个新的职业，前端配置工程师 O(∩_∩)O~\n\n## 社区现状\n\n### 专一的脚手架\n\n社区中存在着大量的专一型框架，主要针对一个目标任务做定制。比如下列脚手架\n\n1. [vue-cli](https://github.com/vuejs/vue-cli)\n\n`vue-cli`提供利用vue开发`webpack`, `pwa`等模板，本文脚手架参考了`vue-cli`的实现。\n\n2. [dva-cli](https://github.com/dvajs/dva-cli)\n\n`dva-cli`主要针对[dva](https://github.com/dvajs/dva)开发使用的脚手架\n\n3. [labrador](https://github.com/maichong/labrador)\n\n`labrador`是一种`微信小程序`组件化开发框架, 虽说小程序目前已经支持组件，但该脚手架的其他特性，依旧很赞。感兴趣的可以了解。\n\n社区中有很多优秀的专一型脚手架出现，这里不在列举。前端社区的火爆，让我辈前端汲取精华，不断前进。\n\n### 通用脚手架\n\n1. [yeoman](https://github.com/yeoman/yeoman)\n\n`yeoman`是一款强壮的且有一系列工具的通用型脚手架，但yeoman发布指定package名称，和用其开发工具。具体可[点击这里查看yeoman添加生成器规则](http://yeoman.io/generators/)\n\n## 开发初衷和目标\n\n由于金融公司形态决定了，业务类型多样，前端技术发展迭代，为了跟进社区发展，更好的完成下列目标而诞生。\n\n- 完成业务：专心，稳定，快速\n- 团队规范：代码规范，发布流程，持续集成/交付/部署\n- 沉淀：持续稳定的引入新技术\n- 效益：少加班，少造轮子，完成kpi，做更有意义的事儿\n\n## 实现准备\n\n依托于Github，根据`Github API`来实现，如下：\n\n1. 获取项目\n\n```bash\ncurl -i https://api.github.com/orgs/project-scaffold/repos\n```\n\n2. 获取版本\n\n```bash\ncurl -i https://api.github.com/repos/project-scaffold/cli/tags\n```\n\n## 具体实现逻辑\n\n根据`github api`获取到项目列表和版本号之后，就可以做一个通用的脚手架.\n\n### 下载\n\n1. 使用\n\n```bash\nproject i\n```\n\n2. 逻辑\n\n```\nGithub API ===> 获取项目列表 ===> 选择一个项目 ===> 获取项目版本号 ===> 选择一个版本号 ===> 下载到本地仓库\n```\n\n若中间每一步 数据为空/文件不存在 则给予提示\n\n3. 核心代码\n\n```js\n\n  // 获取github项目列表\n  const repos = await repoList();\n\n  choices = repos.map(({ name }) => name);\n  answers = await inquirer.prompt([\n    {\n      type   : 'list',\n      name   : 'repo',\n      message: 'which repo do you want to install?',\n      choices\n    }\n  ]);\n  // 选择的项目\n  const repo = answers.repo;\n\n  // 项目的版本号劣币爱哦\n  const tags = await tagList(repo);\n\n  if (tags.length === 0) {\n    version = '';\n  } else {\n    choices = tags.map(({ name }) => name);\n\n    answers = await inquirer.prompt([\n      {\n        type   : 'list',\n        name   : 'version',\n        message: 'which version do you want to install?',\n        choices\n      }\n    ]);\n    version = answers.version;\n  }\n  // 下载\n  await download([repo, version].join('@'));\n```\n\n### 生成项目\n\n1. 使用\n\n```bash\nproject init\n```\n\n2. 逻辑\n\n```\n获取本地仓库列表 ===> 选择一个本地项目 ===> 输入基本信息 ===> 编译生成到临时文件 ===> 复制并重名到目标目录\n```\n\n若中间每一步 数据为空/文件不存在/生成目录已重复 则给予提示\n\n3. 核心代码\n\n```js\n\n  // 获取本地仓库项目\n  const list = await readdir(dirs.download);\n\n  // 基本信息\n  const answers = await inquirer.prompt([\n    {\n      type   : 'list',\n      name   : 'scaffold',\n      message: 'which scaffold do you want to init?',\n      choices: list\n    }, {\n      type   : 'input',\n      name   : 'dir',\n      message: 'project name',\n      // 必要的验证\n      async validate(input) {\n        const done = this.async();\n\n        if (input.length === 0) {\n          done('You must input project name');\n          return;\n        }\n\n        const dir = resolve(process.cwd(), input);\n\n        if (await exists(dir)) {\n          done('The project name is already existed. Please change another name');\n        }\n\n        done(null, true);\n      }\n    }\n  ]);\n  const metalsmith = await rc('metalsmith');\n  if (metalsmith) {\n    const tmp = `${dirs.tmp}/${answers.scaffold}`;\n    // 复制一份到临时目录，在临时目录编译生成\n    await copy(`${dirs.download}/${answers.scaffold}`, tmp);\n    await metal(answers.scaffold);\n    await copy(`${tmp}/${dirs.metalsmith}`, answers.dir);\n    // 删除临时目录\n    await rmfr(tmp);\n  } else {\n    await copy(`${dirs.download}/${answers.scaffold}`, answers.dir);\n  }\n```\n\n### 升级/降级版本\n\n1. 使用\n\n```bash\nproject update\n```\n\n2. 逻辑\n\n```\n获取本地仓库列表 ===> 选择一个本地项目 ===> 获取版本信息列表 ===> 选择一个版本 ===> 覆盖原有的版本文件\n```\n\n若中间每一步 数据为空/文件不存在 则给予提示\n\n3. 核心代码\n\n```js\n  // 获取本地仓库列表\n  const list = await readdir(dirs.download);\n\n  // 选择一个要升级的项目\n  answers = await inquirer.prompt([\n    {\n      type   : 'list',\n      name   : 'scaffold',\n      message: 'which scaffold do you want to update?',\n      choices: list,\n      async validate(input) {\n        const done = this.async();\n\n        if (input.length === 0) {\n          done('You must choice one scaffold to update the version. If not update, Ctrl+C');\n          return;\n        }\n\n        done(null, true);\n      }\n    }\n  ]);\n\n  const repo = answers.scaffold;\n\n  // 获取该项目的版本信息\n  const tags = await tagList(repo);\n\n  if (tags.length === 0) {\n    version = '';\n  } else {\n    choices = tags.map(({ name }) => name);\n\n    answers = await inquirer.prompt([\n      {\n        type   : 'list',\n        name   : 'version',\n        message: 'which version do you want to install?',\n        choices\n      }\n    ]);\n    version = answers.version;\n  }\n  // 下载覆盖文件\n  await download([repo, version].join('@'))\n```\n\n### 配置\n\n配置用来获取脚手架的基本设置， 如registry, type等基本信息。\n\n1. 使用\n\n```bash\nproject config set registry koajs # 设置本地仓库下载源\n\nproject config get registry # 获取本地仓库设置的属性\n\nproject config delete registry # 删除本地设置的属性\n```\n\n2. 逻辑\n\n```\n判定本地设置文件存在 ===> 读/写\n```\n\n若中间每一步 数据为空/文件不存在 则给予提示\n\n3. 核心代码\n\n```js\nswitch (action) {\n    case 'get':\n      console.log(await rc(k));\n      console.log('');\n      return true;\n\n    case 'set':\n      await rc(k, v);\n      return true;\n\n    case 'remove':\n      await rc(k, v, true);\n      return true;\n\n    default:\n      console.log(await rc());\n```\n\n### 搜索\n\n搜索远程的github仓库有哪些项目列表\n\n1. 使用\n\n```bash\n\nproject search\n\n```\n\n2. 逻辑\n\n```\n获取github项目列表 ===> 输入搜索的内容 ===> 返回匹配的列表\n```\n\n若中间每一步 数据为空 则给予提示\n\n3. 核心代码\n\n```js\n const answers = await inquirer.prompt([\n    {\n      type   : 'input',\n      name   : 'search',\n      message: 'search repo'\n    }\n  ]);\n\n  if (answers.search) {\n    let list = await searchList();\n\n    list = list\n      .filter(item => item.name.indexOf(answers.search) > -1)\n      .map(({ name }) => name);\n\n    console.log('');\n\t  if (list.length === 0) {\n\t\t  console.log(`${answers.search} is not found`);\n\t  }\n\t  console.log(list.join('\\n'));\n\t  console.log('');\n  }\n```\n\n\n## 总结\n\n以上是具体实现，该脚手架目前还有一些可以优化的地方：\n\n1. 不同源，存储不同的文件\n2. 支持离线功能\n\n硬广：如果您觉得好用，欢迎star，也欢迎fork一块维护。\n","slug":"project-next-cli","published":1,"updated":"2018-02-12T02:31:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdjm44uy0000ldvg3iqyb1dk","content":"<p>在16年年底的时候，同事聊起脚手架。由于公司业务的<code>多样性</code>,前端的<code>灵活性</code>,让我们不得不思考更通用的脚手架。而不是伴随着前端技术的发展，不断的把时间花在<code>配置</code>上。于是<a href=\"https://github.com/2046/chef-cli\" target=\"_blank\" rel=\"noopener\">chef-cli</a>诞生了。 18年年初，把过往一年的东西整理和总结下，重新增强了原有的脚手架<a href=\"https://github.com/ijs/project-next-cli\" target=\"_blank\" rel=\"noopener\">project-next-cli</a>, 不单单满足我们团队的需求，也可以满足其他人的需求。</p>\n<a id=\"more\"></a>\n<h2 id=\"project-next-cli\"><a href=\"#project-next-cli\" class=\"headerlink\" title=\"project-next-cli\"></a>project-next-cli</h2><p>面向的目标用户：</p>\n<ul>\n<li>公司业务杂，但有一定的积累</li>\n<li>爱折腾的同学和团队</li>\n<li>借助github大量开发模板开发</li>\n</ul>\n<p><img src=\"https://github.com/ijs/project-next-cli/raw/master/project-next-cli.gif\" alt=\"image\"></p>\n<h2 id=\"发展\"><a href=\"#发展\" class=\"headerlink\" title=\"发展\"></a>发展</h2><p>从本人做前端开始（13年），前端这几年处于高速发展，主要表现：</p>\n<p>备注：以下发展过程出现，请不要纠结出现顺序 [捂脸]</p>\n<ul>\n<li>库/框架：jQuery, backbone， angular，react，vue</li>\n<li>模块化：commonjs， AMD(CMD), UMD, es module</li>\n<li>任务管理器：npm scripts,  grunt, gulp</li>\n<li>模块打包工具： r.js, webpack, rollup, browserify</li>\n<li>css预处理器：Sass, Less, Stylus, Postcss</li>\n<li>静态检查器：flow/typescript</li>\n<li>测试工具：mocha，jasmine，jest，ava</li>\n<li>代码检测工具：eslint，jslint</li>\n</ul>\n<h2 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h2><p>当我们真实开发中，会遇到各种各样的业务需求（场景），根据需求和场景选用不同的技术栈，由于技术的进步和不同浏览器运行时的限制，不得不配置对应的环境等，导致我们从而满足业务需求。</p>\n<p>画了一张图来表示，业务，配置（环境），技术之间的关系</p>\n<p><img src=\"/images/dev.jpg\" alt=\"image\"></p>\n<h3 id=\"前端配置工程师\"><a href=\"#前端配置工程师\" class=\"headerlink\" title=\"前端配置工程师\"></a>前端配置工程师</h3><p>于是明见流传了一个新的职业，前端配置工程师 O(∩_∩)O~</p>\n<h2 id=\"社区现状\"><a href=\"#社区现状\" class=\"headerlink\" title=\"社区现状\"></a>社区现状</h2><h3 id=\"专一的脚手架\"><a href=\"#专一的脚手架\" class=\"headerlink\" title=\"专一的脚手架\"></a>专一的脚手架</h3><p>社区中存在着大量的专一型框架，主要针对一个目标任务做定制。比如下列脚手架</p>\n<ol>\n<li><a href=\"https://github.com/vuejs/vue-cli\" target=\"_blank\" rel=\"noopener\">vue-cli</a></li>\n</ol>\n<p><code>vue-cli</code>提供利用vue开发<code>webpack</code>, <code>pwa</code>等模板，本文脚手架参考了<code>vue-cli</code>的实现。</p>\n<ol>\n<li><a href=\"https://github.com/dvajs/dva-cli\" target=\"_blank\" rel=\"noopener\">dva-cli</a></li>\n</ol>\n<p><code>dva-cli</code>主要针对<a href=\"https://github.com/dvajs/dva\" target=\"_blank\" rel=\"noopener\">dva</a>开发使用的脚手架</p>\n<ol>\n<li><a href=\"https://github.com/maichong/labrador\" target=\"_blank\" rel=\"noopener\">labrador</a></li>\n</ol>\n<p><code>labrador</code>是一种<code>微信小程序</code>组件化开发框架, 虽说小程序目前已经支持组件，但该脚手架的其他特性，依旧很赞。感兴趣的可以了解。</p>\n<p>社区中有很多优秀的专一型脚手架出现，这里不在列举。前端社区的火爆，让我辈前端汲取精华，不断前进。</p>\n<h3 id=\"通用脚手架\"><a href=\"#通用脚手架\" class=\"headerlink\" title=\"通用脚手架\"></a>通用脚手架</h3><ol>\n<li><a href=\"https://github.com/yeoman/yeoman\" target=\"_blank\" rel=\"noopener\">yeoman</a></li>\n</ol>\n<p><code>yeoman</code>是一款强壮的且有一系列工具的通用型脚手架，但yeoman发布指定package名称，和用其开发工具。具体可<a href=\"http://yeoman.io/generators/\" target=\"_blank\" rel=\"noopener\">点击这里查看yeoman添加生成器规则</a></p>\n<h2 id=\"开发初衷和目标\"><a href=\"#开发初衷和目标\" class=\"headerlink\" title=\"开发初衷和目标\"></a>开发初衷和目标</h2><p>由于金融公司形态决定了，业务类型多样，前端技术发展迭代，为了跟进社区发展，更好的完成下列目标而诞生。</p>\n<ul>\n<li>完成业务：专心，稳定，快速</li>\n<li>团队规范：代码规范，发布流程，持续集成/交付/部署</li>\n<li>沉淀：持续稳定的引入新技术</li>\n<li>效益：少加班，少造轮子，完成kpi，做更有意义的事儿</li>\n</ul>\n<h2 id=\"实现准备\"><a href=\"#实现准备\" class=\"headerlink\" title=\"实现准备\"></a>实现准备</h2><p>依托于Github，根据<code>Github API</code>来实现，如下：</p>\n<ol>\n<li>获取项目</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -i https://api.github.com/orgs/project-scaffold/repos</span><br></pre></td></tr></table></figure>\n<ol>\n<li>获取版本</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -i https://api.github.com/repos/project-scaffold/cli/tags</span><br></pre></td></tr></table></figure>\n<h2 id=\"具体实现逻辑\"><a href=\"#具体实现逻辑\" class=\"headerlink\" title=\"具体实现逻辑\"></a>具体实现逻辑</h2><p>根据<code>github api</code>获取到项目列表和版本号之后，就可以做一个通用的脚手架.</p>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><ol>\n<li>使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project i</span><br></pre></td></tr></table></figure>\n<ol>\n<li>逻辑</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Github API ===&gt; 获取项目列表 ===&gt; 选择一个项目 ===&gt; 获取项目版本号 ===&gt; 选择一个版本号 ===&gt; 下载到本地仓库</span><br></pre></td></tr></table></figure>\n<p>若中间每一步 数据为空/文件不存在 则给予提示</p>\n<ol>\n<li>核心代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取github项目列表</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> repos = <span class=\"keyword\">await</span> repoList();</span><br><span class=\"line\"></span><br><span class=\"line\">choices = repos.map(<span class=\"function\">(<span class=\"params\">&#123; name &#125;</span>) =&gt;</span> name);</span><br><span class=\"line\">answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    type   : <span class=\"string\">'list'</span>,</span><br><span class=\"line\">    name   : <span class=\"string\">'repo'</span>,</span><br><span class=\"line\">    message: <span class=\"string\">'which repo do you want to install?'</span>,</span><br><span class=\"line\">    choices</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]);</span><br><span class=\"line\"><span class=\"comment\">// 选择的项目</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> repo = answers.repo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 项目的版本号劣币爱哦</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> tags = <span class=\"keyword\">await</span> tagList(repo);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (tags.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  version = <span class=\"string\">''</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  choices = tags.map(<span class=\"function\">(<span class=\"params\">&#123; name &#125;</span>) =&gt;</span> name);</span><br><span class=\"line\"></span><br><span class=\"line\">  answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type   : <span class=\"string\">'list'</span>,</span><br><span class=\"line\">      name   : <span class=\"string\">'version'</span>,</span><br><span class=\"line\">      message: <span class=\"string\">'which version do you want to install?'</span>,</span><br><span class=\"line\">      choices</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]);</span><br><span class=\"line\">  version = answers.version;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 下载</span></span><br><span class=\"line\"><span class=\"keyword\">await</span> download([repo, version].join(<span class=\"string\">'@'</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成项目\"><a href=\"#生成项目\" class=\"headerlink\" title=\"生成项目\"></a>生成项目</h3><ol>\n<li>使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project init</span><br></pre></td></tr></table></figure>\n<ol>\n<li>逻辑</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">获取本地仓库列表 ===&gt; 选择一个本地项目 ===&gt; 输入基本信息 ===&gt; 编译生成到临时文件 ===&gt; 复制并重名到目标目录</span><br></pre></td></tr></table></figure>\n<p>若中间每一步 数据为空/文件不存在/生成目录已重复 则给予提示</p>\n<ol>\n<li>核心代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取本地仓库项目</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> list = <span class=\"keyword\">await</span> readdir(dirs.download);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 基本信息</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    type   : <span class=\"string\">'list'</span>,</span><br><span class=\"line\">    name   : <span class=\"string\">'scaffold'</span>,</span><br><span class=\"line\">    message: <span class=\"string\">'which scaffold do you want to init?'</span>,</span><br><span class=\"line\">    choices: list</span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">    type   : <span class=\"string\">'input'</span>,</span><br><span class=\"line\">    name   : <span class=\"string\">'dir'</span>,</span><br><span class=\"line\">    message: <span class=\"string\">'project name'</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 必要的验证</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> validate(input) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> done = <span class=\"keyword\">this</span>.async();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (input.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        done(<span class=\"string\">'You must input project name'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">const</span> dir = resolve(process.cwd(), input);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">await</span> exists(dir)) &#123;</span><br><span class=\"line\">        done(<span class=\"string\">'The project name is already existed. Please change another name'</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      done(<span class=\"literal\">null</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]);</span><br><span class=\"line\"><span class=\"keyword\">const</span> metalsmith = <span class=\"keyword\">await</span> rc(<span class=\"string\">'metalsmith'</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (metalsmith) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> tmp = <span class=\"string\">`<span class=\"subst\">$&#123;dirs.tmp&#125;</span>/<span class=\"subst\">$&#123;answers.scaffold&#125;</span>`</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 复制一份到临时目录，在临时目录编译生成</span></span><br><span class=\"line\">  <span class=\"keyword\">await</span> copy(<span class=\"string\">`<span class=\"subst\">$&#123;dirs.download&#125;</span>/<span class=\"subst\">$&#123;answers.scaffold&#125;</span>`</span>, tmp);</span><br><span class=\"line\">  <span class=\"keyword\">await</span> metal(answers.scaffold);</span><br><span class=\"line\">  <span class=\"keyword\">await</span> copy(<span class=\"string\">`<span class=\"subst\">$&#123;tmp&#125;</span>/<span class=\"subst\">$&#123;dirs.metalsmith&#125;</span>`</span>, answers.dir);</span><br><span class=\"line\">  <span class=\"comment\">// 删除临时目录</span></span><br><span class=\"line\">  <span class=\"keyword\">await</span> rmfr(tmp);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> copy(<span class=\"string\">`<span class=\"subst\">$&#123;dirs.download&#125;</span>/<span class=\"subst\">$&#123;answers.scaffold&#125;</span>`</span>, answers.dir);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"升级-降级版本\"><a href=\"#升级-降级版本\" class=\"headerlink\" title=\"升级/降级版本\"></a>升级/降级版本</h3><ol>\n<li>使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project update</span><br></pre></td></tr></table></figure>\n<ol>\n<li>逻辑</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">获取本地仓库列表 ===&gt; 选择一个本地项目 ===&gt; 获取版本信息列表 ===&gt; 选择一个版本 ===&gt; 覆盖原有的版本文件</span><br></pre></td></tr></table></figure>\n<p>若中间每一步 数据为空/文件不存在 则给予提示</p>\n<ol>\n<li>核心代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取本地仓库列表</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> list = <span class=\"keyword\">await</span> readdir(dirs.download);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 选择一个要升级的项目</span></span><br><span class=\"line\">answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    type   : <span class=\"string\">'list'</span>,</span><br><span class=\"line\">    name   : <span class=\"string\">'scaffold'</span>,</span><br><span class=\"line\">    message: <span class=\"string\">'which scaffold do you want to update?'</span>,</span><br><span class=\"line\">    choices: list,</span><br><span class=\"line\">    <span class=\"keyword\">async</span> validate(input) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> done = <span class=\"keyword\">this</span>.async();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (input.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        done(<span class=\"string\">'You must choice one scaffold to update the version. If not update, Ctrl+C'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      done(<span class=\"literal\">null</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> repo = answers.scaffold;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取该项目的版本信息</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> tags = <span class=\"keyword\">await</span> tagList(repo);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (tags.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  version = <span class=\"string\">''</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  choices = tags.map(<span class=\"function\">(<span class=\"params\">&#123; name &#125;</span>) =&gt;</span> name);</span><br><span class=\"line\"></span><br><span class=\"line\">  answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type   : <span class=\"string\">'list'</span>,</span><br><span class=\"line\">      name   : <span class=\"string\">'version'</span>,</span><br><span class=\"line\">      message: <span class=\"string\">'which version do you want to install?'</span>,</span><br><span class=\"line\">      choices</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]);</span><br><span class=\"line\">  version = answers.version;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 下载覆盖文件</span></span><br><span class=\"line\"><span class=\"keyword\">await</span> download([repo, version].join(<span class=\"string\">'@'</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>配置用来获取脚手架的基本设置， 如registry, type等基本信息。</p>\n<ol>\n<li>使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project config <span class=\"built_in\">set</span> registry koajs <span class=\"comment\"># 设置本地仓库下载源</span></span><br><span class=\"line\"></span><br><span class=\"line\">project config get registry <span class=\"comment\"># 获取本地仓库设置的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">project config delete registry <span class=\"comment\"># 删除本地设置的属性</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>逻辑</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">判定本地设置文件存在 ===&gt; 读/写</span><br></pre></td></tr></table></figure>\n<p>若中间每一步 数据为空/文件不存在 则给予提示</p>\n<ol>\n<li>核心代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (action) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'get'</span>:</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">await</span> rc(k));</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">''</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'set'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">await</span> rc(k, v);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'remove'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">await</span> rc(k, v, <span class=\"literal\">true</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">await</span> rc());</span><br></pre></td></tr></table></figure>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>搜索远程的github仓库有哪些项目列表</p>\n<ol>\n<li>使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">project search</span><br></pre></td></tr></table></figure>\n<ol>\n<li>逻辑</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">获取github项目列表 ===&gt; 输入搜索的内容 ===&gt; 返回匹配的列表</span><br></pre></td></tr></table></figure>\n<p>若中间每一步 数据为空 则给予提示</p>\n<ol>\n<li>核心代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     type   : <span class=\"string\">'input'</span>,</span><br><span class=\"line\">     name   : <span class=\"string\">'search'</span>,</span><br><span class=\"line\">     message: <span class=\"string\">'search repo'</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> ]);</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">if</span> (answers.search) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> list = <span class=\"keyword\">await</span> searchList();</span><br><span class=\"line\"></span><br><span class=\"line\">   list = list</span><br><span class=\"line\">     .filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.name.indexOf(answers.search) &gt; <span class=\"number\">-1</span>)</span><br><span class=\"line\">     .map(<span class=\"function\">(<span class=\"params\">&#123; name &#125;</span>) =&gt;</span> name);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">''</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (list.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;answers.search&#125;</span> is not found`</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(list.join(<span class=\"string\">'\\n'</span>));</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">''</span>);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>以上是具体实现，该脚手架目前还有一些可以优化的地方：</p>\n<ol>\n<li>不同源，存储不同的文件</li>\n<li>支持离线功能</li>\n</ol>\n<p>硬广：如果您觉得好用，欢迎star，也欢迎fork一块维护。</p>\n","site":{"data":{}},"excerpt":"<p>在16年年底的时候，同事聊起脚手架。由于公司业务的<code>多样性</code>,前端的<code>灵活性</code>,让我们不得不思考更通用的脚手架。而不是伴随着前端技术的发展，不断的把时间花在<code>配置</code>上。于是<a href=\"https://github.com/2046/chef-cli\" target=\"_blank\" rel=\"noopener\">chef-cli</a>诞生了。 18年年初，把过往一年的东西整理和总结下，重新增强了原有的脚手架<a href=\"https://github.com/ijs/project-next-cli\" target=\"_blank\" rel=\"noopener\">project-next-cli</a>, 不单单满足我们团队的需求，也可以满足其他人的需求。</p>","more":"<h2 id=\"project-next-cli\"><a href=\"#project-next-cli\" class=\"headerlink\" title=\"project-next-cli\"></a>project-next-cli</h2><p>面向的目标用户：</p>\n<ul>\n<li>公司业务杂，但有一定的积累</li>\n<li>爱折腾的同学和团队</li>\n<li>借助github大量开发模板开发</li>\n</ul>\n<p><img src=\"https://github.com/ijs/project-next-cli/raw/master/project-next-cli.gif\" alt=\"image\"></p>\n<h2 id=\"发展\"><a href=\"#发展\" class=\"headerlink\" title=\"发展\"></a>发展</h2><p>从本人做前端开始（13年），前端这几年处于高速发展，主要表现：</p>\n<p>备注：以下发展过程出现，请不要纠结出现顺序 [捂脸]</p>\n<ul>\n<li>库/框架：jQuery, backbone， angular，react，vue</li>\n<li>模块化：commonjs， AMD(CMD), UMD, es module</li>\n<li>任务管理器：npm scripts,  grunt, gulp</li>\n<li>模块打包工具： r.js, webpack, rollup, browserify</li>\n<li>css预处理器：Sass, Less, Stylus, Postcss</li>\n<li>静态检查器：flow/typescript</li>\n<li>测试工具：mocha，jasmine，jest，ava</li>\n<li>代码检测工具：eslint，jslint</li>\n</ul>\n<h2 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h2><p>当我们真实开发中，会遇到各种各样的业务需求（场景），根据需求和场景选用不同的技术栈，由于技术的进步和不同浏览器运行时的限制，不得不配置对应的环境等，导致我们从而满足业务需求。</p>\n<p>画了一张图来表示，业务，配置（环境），技术之间的关系</p>\n<p><img src=\"/images/dev.jpg\" alt=\"image\"></p>\n<h3 id=\"前端配置工程师\"><a href=\"#前端配置工程师\" class=\"headerlink\" title=\"前端配置工程师\"></a>前端配置工程师</h3><p>于是明见流传了一个新的职业，前端配置工程师 O(∩_∩)O~</p>\n<h2 id=\"社区现状\"><a href=\"#社区现状\" class=\"headerlink\" title=\"社区现状\"></a>社区现状</h2><h3 id=\"专一的脚手架\"><a href=\"#专一的脚手架\" class=\"headerlink\" title=\"专一的脚手架\"></a>专一的脚手架</h3><p>社区中存在着大量的专一型框架，主要针对一个目标任务做定制。比如下列脚手架</p>\n<ol>\n<li><a href=\"https://github.com/vuejs/vue-cli\" target=\"_blank\" rel=\"noopener\">vue-cli</a></li>\n</ol>\n<p><code>vue-cli</code>提供利用vue开发<code>webpack</code>, <code>pwa</code>等模板，本文脚手架参考了<code>vue-cli</code>的实现。</p>\n<ol>\n<li><a href=\"https://github.com/dvajs/dva-cli\" target=\"_blank\" rel=\"noopener\">dva-cli</a></li>\n</ol>\n<p><code>dva-cli</code>主要针对<a href=\"https://github.com/dvajs/dva\" target=\"_blank\" rel=\"noopener\">dva</a>开发使用的脚手架</p>\n<ol>\n<li><a href=\"https://github.com/maichong/labrador\" target=\"_blank\" rel=\"noopener\">labrador</a></li>\n</ol>\n<p><code>labrador</code>是一种<code>微信小程序</code>组件化开发框架, 虽说小程序目前已经支持组件，但该脚手架的其他特性，依旧很赞。感兴趣的可以了解。</p>\n<p>社区中有很多优秀的专一型脚手架出现，这里不在列举。前端社区的火爆，让我辈前端汲取精华，不断前进。</p>\n<h3 id=\"通用脚手架\"><a href=\"#通用脚手架\" class=\"headerlink\" title=\"通用脚手架\"></a>通用脚手架</h3><ol>\n<li><a href=\"https://github.com/yeoman/yeoman\" target=\"_blank\" rel=\"noopener\">yeoman</a></li>\n</ol>\n<p><code>yeoman</code>是一款强壮的且有一系列工具的通用型脚手架，但yeoman发布指定package名称，和用其开发工具。具体可<a href=\"http://yeoman.io/generators/\" target=\"_blank\" rel=\"noopener\">点击这里查看yeoman添加生成器规则</a></p>\n<h2 id=\"开发初衷和目标\"><a href=\"#开发初衷和目标\" class=\"headerlink\" title=\"开发初衷和目标\"></a>开发初衷和目标</h2><p>由于金融公司形态决定了，业务类型多样，前端技术发展迭代，为了跟进社区发展，更好的完成下列目标而诞生。</p>\n<ul>\n<li>完成业务：专心，稳定，快速</li>\n<li>团队规范：代码规范，发布流程，持续集成/交付/部署</li>\n<li>沉淀：持续稳定的引入新技术</li>\n<li>效益：少加班，少造轮子，完成kpi，做更有意义的事儿</li>\n</ul>\n<h2 id=\"实现准备\"><a href=\"#实现准备\" class=\"headerlink\" title=\"实现准备\"></a>实现准备</h2><p>依托于Github，根据<code>Github API</code>来实现，如下：</p>\n<ol>\n<li>获取项目</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -i https://api.github.com/orgs/project-scaffold/repos</span><br></pre></td></tr></table></figure>\n<ol>\n<li>获取版本</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -i https://api.github.com/repos/project-scaffold/cli/tags</span><br></pre></td></tr></table></figure>\n<h2 id=\"具体实现逻辑\"><a href=\"#具体实现逻辑\" class=\"headerlink\" title=\"具体实现逻辑\"></a>具体实现逻辑</h2><p>根据<code>github api</code>获取到项目列表和版本号之后，就可以做一个通用的脚手架.</p>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><ol>\n<li>使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project i</span><br></pre></td></tr></table></figure>\n<ol>\n<li>逻辑</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Github API ===&gt; 获取项目列表 ===&gt; 选择一个项目 ===&gt; 获取项目版本号 ===&gt; 选择一个版本号 ===&gt; 下载到本地仓库</span><br></pre></td></tr></table></figure>\n<p>若中间每一步 数据为空/文件不存在 则给予提示</p>\n<ol>\n<li>核心代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取github项目列表</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> repos = <span class=\"keyword\">await</span> repoList();</span><br><span class=\"line\"></span><br><span class=\"line\">choices = repos.map(<span class=\"function\">(<span class=\"params\">&#123; name &#125;</span>) =&gt;</span> name);</span><br><span class=\"line\">answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    type   : <span class=\"string\">'list'</span>,</span><br><span class=\"line\">    name   : <span class=\"string\">'repo'</span>,</span><br><span class=\"line\">    message: <span class=\"string\">'which repo do you want to install?'</span>,</span><br><span class=\"line\">    choices</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]);</span><br><span class=\"line\"><span class=\"comment\">// 选择的项目</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> repo = answers.repo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 项目的版本号劣币爱哦</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> tags = <span class=\"keyword\">await</span> tagList(repo);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (tags.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  version = <span class=\"string\">''</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  choices = tags.map(<span class=\"function\">(<span class=\"params\">&#123; name &#125;</span>) =&gt;</span> name);</span><br><span class=\"line\"></span><br><span class=\"line\">  answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type   : <span class=\"string\">'list'</span>,</span><br><span class=\"line\">      name   : <span class=\"string\">'version'</span>,</span><br><span class=\"line\">      message: <span class=\"string\">'which version do you want to install?'</span>,</span><br><span class=\"line\">      choices</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]);</span><br><span class=\"line\">  version = answers.version;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 下载</span></span><br><span class=\"line\"><span class=\"keyword\">await</span> download([repo, version].join(<span class=\"string\">'@'</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成项目\"><a href=\"#生成项目\" class=\"headerlink\" title=\"生成项目\"></a>生成项目</h3><ol>\n<li>使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project init</span><br></pre></td></tr></table></figure>\n<ol>\n<li>逻辑</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">获取本地仓库列表 ===&gt; 选择一个本地项目 ===&gt; 输入基本信息 ===&gt; 编译生成到临时文件 ===&gt; 复制并重名到目标目录</span><br></pre></td></tr></table></figure>\n<p>若中间每一步 数据为空/文件不存在/生成目录已重复 则给予提示</p>\n<ol>\n<li>核心代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取本地仓库项目</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> list = <span class=\"keyword\">await</span> readdir(dirs.download);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 基本信息</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    type   : <span class=\"string\">'list'</span>,</span><br><span class=\"line\">    name   : <span class=\"string\">'scaffold'</span>,</span><br><span class=\"line\">    message: <span class=\"string\">'which scaffold do you want to init?'</span>,</span><br><span class=\"line\">    choices: list</span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">    type   : <span class=\"string\">'input'</span>,</span><br><span class=\"line\">    name   : <span class=\"string\">'dir'</span>,</span><br><span class=\"line\">    message: <span class=\"string\">'project name'</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 必要的验证</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> validate(input) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> done = <span class=\"keyword\">this</span>.async();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (input.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        done(<span class=\"string\">'You must input project name'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">const</span> dir = resolve(process.cwd(), input);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">await</span> exists(dir)) &#123;</span><br><span class=\"line\">        done(<span class=\"string\">'The project name is already existed. Please change another name'</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      done(<span class=\"literal\">null</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]);</span><br><span class=\"line\"><span class=\"keyword\">const</span> metalsmith = <span class=\"keyword\">await</span> rc(<span class=\"string\">'metalsmith'</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (metalsmith) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> tmp = <span class=\"string\">`<span class=\"subst\">$&#123;dirs.tmp&#125;</span>/<span class=\"subst\">$&#123;answers.scaffold&#125;</span>`</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 复制一份到临时目录，在临时目录编译生成</span></span><br><span class=\"line\">  <span class=\"keyword\">await</span> copy(<span class=\"string\">`<span class=\"subst\">$&#123;dirs.download&#125;</span>/<span class=\"subst\">$&#123;answers.scaffold&#125;</span>`</span>, tmp);</span><br><span class=\"line\">  <span class=\"keyword\">await</span> metal(answers.scaffold);</span><br><span class=\"line\">  <span class=\"keyword\">await</span> copy(<span class=\"string\">`<span class=\"subst\">$&#123;tmp&#125;</span>/<span class=\"subst\">$&#123;dirs.metalsmith&#125;</span>`</span>, answers.dir);</span><br><span class=\"line\">  <span class=\"comment\">// 删除临时目录</span></span><br><span class=\"line\">  <span class=\"keyword\">await</span> rmfr(tmp);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> copy(<span class=\"string\">`<span class=\"subst\">$&#123;dirs.download&#125;</span>/<span class=\"subst\">$&#123;answers.scaffold&#125;</span>`</span>, answers.dir);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"升级-降级版本\"><a href=\"#升级-降级版本\" class=\"headerlink\" title=\"升级/降级版本\"></a>升级/降级版本</h3><ol>\n<li>使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project update</span><br></pre></td></tr></table></figure>\n<ol>\n<li>逻辑</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">获取本地仓库列表 ===&gt; 选择一个本地项目 ===&gt; 获取版本信息列表 ===&gt; 选择一个版本 ===&gt; 覆盖原有的版本文件</span><br></pre></td></tr></table></figure>\n<p>若中间每一步 数据为空/文件不存在 则给予提示</p>\n<ol>\n<li>核心代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取本地仓库列表</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> list = <span class=\"keyword\">await</span> readdir(dirs.download);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 选择一个要升级的项目</span></span><br><span class=\"line\">answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    type   : <span class=\"string\">'list'</span>,</span><br><span class=\"line\">    name   : <span class=\"string\">'scaffold'</span>,</span><br><span class=\"line\">    message: <span class=\"string\">'which scaffold do you want to update?'</span>,</span><br><span class=\"line\">    choices: list,</span><br><span class=\"line\">    <span class=\"keyword\">async</span> validate(input) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> done = <span class=\"keyword\">this</span>.async();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (input.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        done(<span class=\"string\">'You must choice one scaffold to update the version. If not update, Ctrl+C'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      done(<span class=\"literal\">null</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> repo = answers.scaffold;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取该项目的版本信息</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> tags = <span class=\"keyword\">await</span> tagList(repo);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (tags.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  version = <span class=\"string\">''</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  choices = tags.map(<span class=\"function\">(<span class=\"params\">&#123; name &#125;</span>) =&gt;</span> name);</span><br><span class=\"line\"></span><br><span class=\"line\">  answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type   : <span class=\"string\">'list'</span>,</span><br><span class=\"line\">      name   : <span class=\"string\">'version'</span>,</span><br><span class=\"line\">      message: <span class=\"string\">'which version do you want to install?'</span>,</span><br><span class=\"line\">      choices</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]);</span><br><span class=\"line\">  version = answers.version;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 下载覆盖文件</span></span><br><span class=\"line\"><span class=\"keyword\">await</span> download([repo, version].join(<span class=\"string\">'@'</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>配置用来获取脚手架的基本设置， 如registry, type等基本信息。</p>\n<ol>\n<li>使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project config <span class=\"built_in\">set</span> registry koajs <span class=\"comment\"># 设置本地仓库下载源</span></span><br><span class=\"line\"></span><br><span class=\"line\">project config get registry <span class=\"comment\"># 获取本地仓库设置的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">project config delete registry <span class=\"comment\"># 删除本地设置的属性</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>逻辑</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">判定本地设置文件存在 ===&gt; 读/写</span><br></pre></td></tr></table></figure>\n<p>若中间每一步 数据为空/文件不存在 则给予提示</p>\n<ol>\n<li>核心代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (action) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'get'</span>:</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">await</span> rc(k));</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">''</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'set'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">await</span> rc(k, v);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'remove'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">await</span> rc(k, v, <span class=\"literal\">true</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">await</span> rc());</span><br></pre></td></tr></table></figure>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>搜索远程的github仓库有哪些项目列表</p>\n<ol>\n<li>使用</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">project search</span><br></pre></td></tr></table></figure>\n<ol>\n<li>逻辑</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">获取github项目列表 ===&gt; 输入搜索的内容 ===&gt; 返回匹配的列表</span><br></pre></td></tr></table></figure>\n<p>若中间每一步 数据为空 则给予提示</p>\n<ol>\n<li>核心代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> answers = <span class=\"keyword\">await</span> inquirer.prompt([</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     type   : <span class=\"string\">'input'</span>,</span><br><span class=\"line\">     name   : <span class=\"string\">'search'</span>,</span><br><span class=\"line\">     message: <span class=\"string\">'search repo'</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> ]);</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">if</span> (answers.search) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> list = <span class=\"keyword\">await</span> searchList();</span><br><span class=\"line\"></span><br><span class=\"line\">   list = list</span><br><span class=\"line\">     .filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.name.indexOf(answers.search) &gt; <span class=\"number\">-1</span>)</span><br><span class=\"line\">     .map(<span class=\"function\">(<span class=\"params\">&#123; name &#125;</span>) =&gt;</span> name);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">''</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (list.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;answers.search&#125;</span> is not found`</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(list.join(<span class=\"string\">'\\n'</span>));</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">''</span>);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>以上是具体实现，该脚手架目前还有一些可以优化的地方：</p>\n<ol>\n<li>不同源，存储不同的文件</li>\n<li>支持离线功能</li>\n</ol>\n<p>硬广：如果您觉得好用，欢迎star，也欢迎fork一块维护。</p>"},{"title":"npm依赖版本锁定和管理","date":"2017-12-01T11:55:00.000Z","issue":"https://github.com/jiangtao/blog/issues/19","_content":"\n\n前几天测试的时候遇到个问题，测试的时候出现依赖升级问题，由于测试同学是重新换了个机子，重装了环境，导致下载过程中依赖升级。npm带来便利的时候也带一些问题。如果您觉得比较啰嗦，直接看结果。\n\n我们的vue项目最早依赖2.1.8版本做了组件和项目，为了保证产品的稳定性，决定锁死版本。可以参考[这篇文章](https://zhuanlan.zhihu.com/p/31442269)，介绍了框架升级分析的方法。\n\n<!--more-->\n\n如果你也是使用vue可能需要注意以下依赖：\n\n```bash\n  \"vue-loader\": \"9.9.5\",\n  \"vue-style-loader\": \"1.0.0\",\n  \"vue\": \"2.1.8\",\n  \"vue-template-compiler\": \"2.1.8\"\n```\n\n针对这种依赖升级解决方法：\n\n1. 只发布编译后的文件\n\n这样测试同学就无需关心，升级依赖后再重新打包发布。\n\n优点: 测试同学无需关注依赖安装\n缺点: 产出目录充斥着各种版本的文件，增量存储repo越来越大\n\n2. 不通过包管理工具，直接把 node_modules打包，测试环境解压，每次升级依赖重新发布\n\n开发直接把 `node_modules` 打成tar包, 部署的时候解压然后，再通过 `npm run test`打包测试. 一般现在一个项目一个node_modules打包后几十M（gzip之后），更新依赖之后解压。\n\n好处： 无网络\n坏处： 有一些c++的npm包，在不同的系统环境下是不同的，因此在osx下的`node_modules`，在`Ubuntu`失效。 好在我们的项目没有这种依赖包，所以也可以做一种方案。若有c++的包，则需要在本地装虚拟环境，如`vagrant`或`docker`跑测试对应的环境. 每当此时心里总是在想，咱还是前端开发吗[捂脸]\n\n3. 包管理工具锁死\n\nnode发展历程中出现了几种方式来做版本锁定, 以下面`package.json`为例\n\n```json\n{\n  \"name\": \"npm-lock\",\n  \"version\": \"0.0.1\",\n  \"description\": \"test dependies lock way\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"f2ecoder@vip.qq.com\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {},\n  \"dependencies\": {\n    \"vue\": \"^2.2.0\"\n  }\n}\n\n```\n\n没有下列命令的情况下,  查看 vue版本是 `2.5.9`, `npm outdate`没有输出，也就是最新版本。以下是三种锁定版本的方案，如果觉得文章啰嗦，可以直接查看表格比较：\n\n-|npm-shrinkwrap.json|package-lock.json|yarn.lock\n:-:|:-:|:-:|:-:\n命令|npm shrinkwrap|无|无\n生成方式|需要命令生成|npm安装自动生成 |yarn安装自动生成\nnpm版本|任意|>=5.0.0|任意\n额外安装|无|无|yarn\n增加依赖|npm i -S vue@2.1.8 && npm shrinkwrap|npm i -S vue@2.1.8|yarn add vue@2.1.8\n更新|npm uni -S vue && npm I -S vue@2.5.1|npm uni -S vue&& npm i -S vue@2.5.1|yarn upgrade vue@2.5.1\n删除|npm uni -S vue|npm uni -S vue|yarn remove vue\n发布|支持|不支持|支持\n离线|不支持|不支持|支持\n缓存|不支持|不支持|支持\n\n## npm shrinkwrap\n\n为了确保我们使用的vue版本是2.2.0， 删除依赖，重新下载. 以下测试环境参数：\n\nnode: v6.10.2\nnpm: 3.10.10\n\n\n`npm i vue@2.2.0 -S`， 查看node_modules vue版本是2.2.0\n\nnpm官方提供 `npm shrinkwrap`命令，生成 `npm-shrinkwrap.json`文件。\n\n下面对依赖做增加，删除，修改的操作，看看 `npm-shrinkwrap.json`变化\n\n**1. 增加依赖**\n\n`npm  i vue-http@2.0.1 -S`, `npm-shrinkwrap.json` 自动将`vue-http`及其依赖添加进去\n\n**2. 删除依赖**\n`npm uni vue-http -S`, 删除的时候自动删除`npm-shrinkwrap.json`中的`vue-http`及其依赖； 若忘了加 -S 或 -D， 则无法删除， 不够智能。\n\n**3. 升级/降级依赖**\n\n`npm up vue-http@2.0.0 -S` ，升级依赖，依赖没有升级，`npm-shrinkwrap.json`无更新，略显鸡肋。所以更新的话，直接通过上述方式删除，再添加吧。\n\n**4. 结果**\n\n把node_modules删掉，`npm i`， 依赖完美下载成功。\n\n优点：npm天然支持\n缺点：需要手动触发，update不生效\n\n## yarn\n\n重新把`npm shrinkwrap`验证逻辑跑一遍.\n\n**1. 新增依赖**\n\n`yarn add vue@2.2.0 vue-http@1.0.0`的时候，自动生成了 `yarn.lock`文件及其相关依赖\n\n**2. 删除依赖**\n\n`yarn remove vue-http`, 自动删除依赖\n\n**3. 更新依赖**\n\n`yarn upgrade vue-http@2.0.1`， 依赖更新成功， `yarn.lock`版本更新成功\n\n**4. 结果**\n\n把node_modules删掉，`npm i`， 依赖完美下载成功。更重要的是， yarn会在本地缓存一份依赖，存储在 $HOME/.yarn-cache目录下，\n\n存储文件的规则是： registry-package_name-version，下载前会检查缓存中是否命中，若命中直接从本地获取，因此速度更快。\n\n优点: 通过yarn命令操作，可以自动更新yarn.lock，从缓存中读取速度快. 支持离线模式\n缺点: 还需要在下载一个yarn命令\n\n## package-lock.json\n\n`package-lock.json`是npm 5.0之后, 对应的node版本是8.0.0, npm下载的时候会自动的出现在目录中. 将Node升级到8.0.0进行以上测试.\n\n**1. 增加依赖**\n\n`npm  i vue-http@2.0.1 -S`, 自动生成的`package-lock.json` 自动将`vue-http`及其依赖添加进去\n\n**2. 删除依赖**\n`npm uni vue-http -S`, 删除的时候，自动删除`package-lock.json`中的`vue-http`及其依赖； 不需要加 -S -D\n\n**3. 升级/降级依赖**\n\n`npm up vue-http@2.0.0 -S` ，升级依赖，依赖没有升级，`package-lock.json`无更新，。所以更新的话，直接通过上述方式删除，再添加吧。是npm update的问题\n\n**4. 结果**\n\n把node_modules删掉，`npm i`， 依赖完美下载成功。\n\n优点：npm天然支持， 比较智能。\n缺点：只有npm5.0之后支持，若低于8.0.0版本的node需要手动下载npm5. 另外`package-lock.json`不能发包。 因此官方给出可以通过 `npm shrinkwrap`把 `package-lock.json`重命名为 `npm-shrinkwrap.json`.\n\n## 总结\n\n对比总结，采用yarn管理，好处除了安装一个依赖之后，版本锁定智能，下载一次后速度快。yarn使用的包也是npm上的包可以在各个node版本中使用。\n\n## 推荐阅读\n\n- [从 npm 迁移](https://yarnpkg.com/lang/zh-hans/docs/migrating-from-npm/)\n","source":"_posts/version-lock.md","raw":"title: npm依赖版本锁定和管理\ndate: 2017-12-01 19:55:00\ntags:\n - npm\n - yarn\nissue: https://github.com/jiangtao/blog/issues/19\n---\n\n\n前几天测试的时候遇到个问题，测试的时候出现依赖升级问题，由于测试同学是重新换了个机子，重装了环境，导致下载过程中依赖升级。npm带来便利的时候也带一些问题。如果您觉得比较啰嗦，直接看结果。\n\n我们的vue项目最早依赖2.1.8版本做了组件和项目，为了保证产品的稳定性，决定锁死版本。可以参考[这篇文章](https://zhuanlan.zhihu.com/p/31442269)，介绍了框架升级分析的方法。\n\n<!--more-->\n\n如果你也是使用vue可能需要注意以下依赖：\n\n```bash\n  \"vue-loader\": \"9.9.5\",\n  \"vue-style-loader\": \"1.0.0\",\n  \"vue\": \"2.1.8\",\n  \"vue-template-compiler\": \"2.1.8\"\n```\n\n针对这种依赖升级解决方法：\n\n1. 只发布编译后的文件\n\n这样测试同学就无需关心，升级依赖后再重新打包发布。\n\n优点: 测试同学无需关注依赖安装\n缺点: 产出目录充斥着各种版本的文件，增量存储repo越来越大\n\n2. 不通过包管理工具，直接把 node_modules打包，测试环境解压，每次升级依赖重新发布\n\n开发直接把 `node_modules` 打成tar包, 部署的时候解压然后，再通过 `npm run test`打包测试. 一般现在一个项目一个node_modules打包后几十M（gzip之后），更新依赖之后解压。\n\n好处： 无网络\n坏处： 有一些c++的npm包，在不同的系统环境下是不同的，因此在osx下的`node_modules`，在`Ubuntu`失效。 好在我们的项目没有这种依赖包，所以也可以做一种方案。若有c++的包，则需要在本地装虚拟环境，如`vagrant`或`docker`跑测试对应的环境. 每当此时心里总是在想，咱还是前端开发吗[捂脸]\n\n3. 包管理工具锁死\n\nnode发展历程中出现了几种方式来做版本锁定, 以下面`package.json`为例\n\n```json\n{\n  \"name\": \"npm-lock\",\n  \"version\": \"0.0.1\",\n  \"description\": \"test dependies lock way\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"f2ecoder@vip.qq.com\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {},\n  \"dependencies\": {\n    \"vue\": \"^2.2.0\"\n  }\n}\n\n```\n\n没有下列命令的情况下,  查看 vue版本是 `2.5.9`, `npm outdate`没有输出，也就是最新版本。以下是三种锁定版本的方案，如果觉得文章啰嗦，可以直接查看表格比较：\n\n-|npm-shrinkwrap.json|package-lock.json|yarn.lock\n:-:|:-:|:-:|:-:\n命令|npm shrinkwrap|无|无\n生成方式|需要命令生成|npm安装自动生成 |yarn安装自动生成\nnpm版本|任意|>=5.0.0|任意\n额外安装|无|无|yarn\n增加依赖|npm i -S vue@2.1.8 && npm shrinkwrap|npm i -S vue@2.1.8|yarn add vue@2.1.8\n更新|npm uni -S vue && npm I -S vue@2.5.1|npm uni -S vue&& npm i -S vue@2.5.1|yarn upgrade vue@2.5.1\n删除|npm uni -S vue|npm uni -S vue|yarn remove vue\n发布|支持|不支持|支持\n离线|不支持|不支持|支持\n缓存|不支持|不支持|支持\n\n## npm shrinkwrap\n\n为了确保我们使用的vue版本是2.2.0， 删除依赖，重新下载. 以下测试环境参数：\n\nnode: v6.10.2\nnpm: 3.10.10\n\n\n`npm i vue@2.2.0 -S`， 查看node_modules vue版本是2.2.0\n\nnpm官方提供 `npm shrinkwrap`命令，生成 `npm-shrinkwrap.json`文件。\n\n下面对依赖做增加，删除，修改的操作，看看 `npm-shrinkwrap.json`变化\n\n**1. 增加依赖**\n\n`npm  i vue-http@2.0.1 -S`, `npm-shrinkwrap.json` 自动将`vue-http`及其依赖添加进去\n\n**2. 删除依赖**\n`npm uni vue-http -S`, 删除的时候自动删除`npm-shrinkwrap.json`中的`vue-http`及其依赖； 若忘了加 -S 或 -D， 则无法删除， 不够智能。\n\n**3. 升级/降级依赖**\n\n`npm up vue-http@2.0.0 -S` ，升级依赖，依赖没有升级，`npm-shrinkwrap.json`无更新，略显鸡肋。所以更新的话，直接通过上述方式删除，再添加吧。\n\n**4. 结果**\n\n把node_modules删掉，`npm i`， 依赖完美下载成功。\n\n优点：npm天然支持\n缺点：需要手动触发，update不生效\n\n## yarn\n\n重新把`npm shrinkwrap`验证逻辑跑一遍.\n\n**1. 新增依赖**\n\n`yarn add vue@2.2.0 vue-http@1.0.0`的时候，自动生成了 `yarn.lock`文件及其相关依赖\n\n**2. 删除依赖**\n\n`yarn remove vue-http`, 自动删除依赖\n\n**3. 更新依赖**\n\n`yarn upgrade vue-http@2.0.1`， 依赖更新成功， `yarn.lock`版本更新成功\n\n**4. 结果**\n\n把node_modules删掉，`npm i`， 依赖完美下载成功。更重要的是， yarn会在本地缓存一份依赖，存储在 $HOME/.yarn-cache目录下，\n\n存储文件的规则是： registry-package_name-version，下载前会检查缓存中是否命中，若命中直接从本地获取，因此速度更快。\n\n优点: 通过yarn命令操作，可以自动更新yarn.lock，从缓存中读取速度快. 支持离线模式\n缺点: 还需要在下载一个yarn命令\n\n## package-lock.json\n\n`package-lock.json`是npm 5.0之后, 对应的node版本是8.0.0, npm下载的时候会自动的出现在目录中. 将Node升级到8.0.0进行以上测试.\n\n**1. 增加依赖**\n\n`npm  i vue-http@2.0.1 -S`, 自动生成的`package-lock.json` 自动将`vue-http`及其依赖添加进去\n\n**2. 删除依赖**\n`npm uni vue-http -S`, 删除的时候，自动删除`package-lock.json`中的`vue-http`及其依赖； 不需要加 -S -D\n\n**3. 升级/降级依赖**\n\n`npm up vue-http@2.0.0 -S` ，升级依赖，依赖没有升级，`package-lock.json`无更新，。所以更新的话，直接通过上述方式删除，再添加吧。是npm update的问题\n\n**4. 结果**\n\n把node_modules删掉，`npm i`， 依赖完美下载成功。\n\n优点：npm天然支持， 比较智能。\n缺点：只有npm5.0之后支持，若低于8.0.0版本的node需要手动下载npm5. 另外`package-lock.json`不能发包。 因此官方给出可以通过 `npm shrinkwrap`把 `package-lock.json`重命名为 `npm-shrinkwrap.json`.\n\n## 总结\n\n对比总结，采用yarn管理，好处除了安装一个依赖之后，版本锁定智能，下载一次后速度快。yarn使用的包也是npm上的包可以在各个node版本中使用。\n\n## 推荐阅读\n\n- [从 npm 迁移](https://yarnpkg.com/lang/zh-hans/docs/migrating-from-npm/)\n","slug":"version-lock","published":1,"updated":"2018-02-12T02:31:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdjm44v30002ldvgopvmbx1x","content":"<p>前几天测试的时候遇到个问题，测试的时候出现依赖升级问题，由于测试同学是重新换了个机子，重装了环境，导致下载过程中依赖升级。npm带来便利的时候也带一些问题。如果您觉得比较啰嗦，直接看结果。</p>\n<p>我们的vue项目最早依赖2.1.8版本做了组件和项目，为了保证产品的稳定性，决定锁死版本。可以参考<a href=\"https://zhuanlan.zhihu.com/p/31442269\" target=\"_blank\" rel=\"noopener\">这篇文章</a>，介绍了框架升级分析的方法。</p>\n<a id=\"more\"></a>\n<p>如果你也是使用vue可能需要注意以下依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"vue-loader\"</span>: <span class=\"string\">\"9.9.5\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"vue-style-loader\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"vue\"</span>: <span class=\"string\">\"2.1.8\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"vue-template-compiler\"</span>: <span class=\"string\">\"2.1.8\"</span></span><br></pre></td></tr></table></figure>\n<p>针对这种依赖升级解决方法：</p>\n<ol>\n<li>只发布编译后的文件</li>\n</ol>\n<p>这样测试同学就无需关心，升级依赖后再重新打包发布。</p>\n<p>优点: 测试同学无需关注依赖安装<br>缺点: 产出目录充斥着各种版本的文件，增量存储repo越来越大</p>\n<ol>\n<li>不通过包管理工具，直接把 node_modules打包，测试环境解压，每次升级依赖重新发布</li>\n</ol>\n<p>开发直接把 <code>node_modules</code> 打成tar包, 部署的时候解压然后，再通过 <code>npm run test</code>打包测试. 一般现在一个项目一个node_modules打包后几十M（gzip之后），更新依赖之后解压。</p>\n<p>好处： 无网络<br>坏处： 有一些c++的npm包，在不同的系统环境下是不同的，因此在osx下的<code>node_modules</code>，在<code>Ubuntu</code>失效。 好在我们的项目没有这种依赖包，所以也可以做一种方案。若有c++的包，则需要在本地装虚拟环境，如<code>vagrant</code>或<code>docker</code>跑测试对应的环境. 每当此时心里总是在想，咱还是前端开发吗[捂脸]</p>\n<ol>\n<li>包管理工具锁死</li>\n</ol>\n<p>node发展历程中出现了几种方式来做版本锁定, 以下面<code>package.json</code>为例</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"npm-lock\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"test dependies lock way\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index.js\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"f2ecoder@vip.qq.com\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"license\"</span>: <span class=\"string\">\"MIT\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"devDependencies\"</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"vue\"</span>: <span class=\"string\">\"^2.2.0\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>没有下列命令的情况下,  查看 vue版本是 <code>2.5.9</code>, <code>npm outdate</code>没有输出，也就是最新版本。以下是三种锁定版本的方案，如果觉得文章啰嗦，可以直接查看表格比较：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">-</th>\n<th style=\"text-align:center\">npm-shrinkwrap.json</th>\n<th style=\"text-align:center\">package-lock.json</th>\n<th style=\"text-align:center\">yarn.lock</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">命令</td>\n<td style=\"text-align:center\">npm shrinkwrap</td>\n<td style=\"text-align:center\">无</td>\n<td style=\"text-align:center\">无</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">生成方式</td>\n<td style=\"text-align:center\">需要命令生成</td>\n<td style=\"text-align:center\">npm安装自动生成</td>\n<td style=\"text-align:center\">yarn安装自动生成</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">npm版本</td>\n<td style=\"text-align:center\">任意</td>\n<td style=\"text-align:center\">&gt;=5.0.0</td>\n<td style=\"text-align:center\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">额外安装</td>\n<td style=\"text-align:center\">无</td>\n<td style=\"text-align:center\">无</td>\n<td style=\"text-align:center\">yarn</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">增加依赖</td>\n<td style=\"text-align:center\">npm i -S vue@2.1.8 &amp;&amp; npm shrinkwrap</td>\n<td style=\"text-align:center\">npm i -S vue@2.1.8</td>\n<td style=\"text-align:center\">yarn add vue@2.1.8</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">更新</td>\n<td style=\"text-align:center\">npm uni -S vue &amp;&amp; npm I -S vue@2.5.1</td>\n<td style=\"text-align:center\">npm uni -S vue&amp;&amp; npm i -S vue@2.5.1</td>\n<td style=\"text-align:center\">yarn upgrade vue@2.5.1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">删除</td>\n<td style=\"text-align:center\">npm uni -S vue</td>\n<td style=\"text-align:center\">npm uni -S vue</td>\n<td style=\"text-align:center\">yarn remove vue</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">发布</td>\n<td style=\"text-align:center\">支持</td>\n<td style=\"text-align:center\">不支持</td>\n<td style=\"text-align:center\">支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">离线</td>\n<td style=\"text-align:center\">不支持</td>\n<td style=\"text-align:center\">不支持</td>\n<td style=\"text-align:center\">支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">缓存</td>\n<td style=\"text-align:center\">不支持</td>\n<td style=\"text-align:center\">不支持</td>\n<td style=\"text-align:center\">支持</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"npm-shrinkwrap\"><a href=\"#npm-shrinkwrap\" class=\"headerlink\" title=\"npm shrinkwrap\"></a>npm shrinkwrap</h2><p>为了确保我们使用的vue版本是2.2.0， 删除依赖，重新下载. 以下测试环境参数：</p>\n<p>node: v6.10.2<br>npm: 3.10.10</p>\n<p><code>npm i vue@2.2.0 -S</code>， 查看node_modules vue版本是2.2.0</p>\n<p>npm官方提供 <code>npm shrinkwrap</code>命令，生成 <code>npm-shrinkwrap.json</code>文件。</p>\n<p>下面对依赖做增加，删除，修改的操作，看看 <code>npm-shrinkwrap.json</code>变化</p>\n<p><strong>1. 增加依赖</strong></p>\n<p><code>npm  i vue-http@2.0.1 -S</code>, <code>npm-shrinkwrap.json</code> 自动将<code>vue-http</code>及其依赖添加进去</p>\n<p><strong>2. 删除依赖</strong><br><code>npm uni vue-http -S</code>, 删除的时候自动删除<code>npm-shrinkwrap.json</code>中的<code>vue-http</code>及其依赖； 若忘了加 -S 或 -D， 则无法删除， 不够智能。</p>\n<p><strong>3. 升级/降级依赖</strong></p>\n<p><code>npm up vue-http@2.0.0 -S</code> ，升级依赖，依赖没有升级，<code>npm-shrinkwrap.json</code>无更新，略显鸡肋。所以更新的话，直接通过上述方式删除，再添加吧。</p>\n<p><strong>4. 结果</strong></p>\n<p>把node_modules删掉，<code>npm i</code>， 依赖完美下载成功。</p>\n<p>优点：npm天然支持<br>缺点：需要手动触发，update不生效</p>\n<h2 id=\"yarn\"><a href=\"#yarn\" class=\"headerlink\" title=\"yarn\"></a>yarn</h2><p>重新把<code>npm shrinkwrap</code>验证逻辑跑一遍.</p>\n<p><strong>1. 新增依赖</strong></p>\n<p><code>yarn add vue@2.2.0 vue-http@1.0.0</code>的时候，自动生成了 <code>yarn.lock</code>文件及其相关依赖</p>\n<p><strong>2. 删除依赖</strong></p>\n<p><code>yarn remove vue-http</code>, 自动删除依赖</p>\n<p><strong>3. 更新依赖</strong></p>\n<p><code>yarn upgrade vue-http@2.0.1</code>， 依赖更新成功， <code>yarn.lock</code>版本更新成功</p>\n<p><strong>4. 结果</strong></p>\n<p>把node_modules删掉，<code>npm i</code>， 依赖完美下载成功。更重要的是， yarn会在本地缓存一份依赖，存储在 $HOME/.yarn-cache目录下，</p>\n<p>存储文件的规则是： registry-package_name-version，下载前会检查缓存中是否命中，若命中直接从本地获取，因此速度更快。</p>\n<p>优点: 通过yarn命令操作，可以自动更新yarn.lock，从缓存中读取速度快. 支持离线模式<br>缺点: 还需要在下载一个yarn命令</p>\n<h2 id=\"package-lock-json\"><a href=\"#package-lock-json\" class=\"headerlink\" title=\"package-lock.json\"></a>package-lock.json</h2><p><code>package-lock.json</code>是npm 5.0之后, 对应的node版本是8.0.0, npm下载的时候会自动的出现在目录中. 将Node升级到8.0.0进行以上测试.</p>\n<p><strong>1. 增加依赖</strong></p>\n<p><code>npm  i vue-http@2.0.1 -S</code>, 自动生成的<code>package-lock.json</code> 自动将<code>vue-http</code>及其依赖添加进去</p>\n<p><strong>2. 删除依赖</strong><br><code>npm uni vue-http -S</code>, 删除的时候，自动删除<code>package-lock.json</code>中的<code>vue-http</code>及其依赖； 不需要加 -S -D</p>\n<p><strong>3. 升级/降级依赖</strong></p>\n<p><code>npm up vue-http@2.0.0 -S</code> ，升级依赖，依赖没有升级，<code>package-lock.json</code>无更新，。所以更新的话，直接通过上述方式删除，再添加吧。是npm update的问题</p>\n<p><strong>4. 结果</strong></p>\n<p>把node_modules删掉，<code>npm i</code>， 依赖完美下载成功。</p>\n<p>优点：npm天然支持， 比较智能。<br>缺点：只有npm5.0之后支持，若低于8.0.0版本的node需要手动下载npm5. 另外<code>package-lock.json</code>不能发包。 因此官方给出可以通过 <code>npm shrinkwrap</code>把 <code>package-lock.json</code>重命名为 <code>npm-shrinkwrap.json</code>.</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>对比总结，采用yarn管理，好处除了安装一个依赖之后，版本锁定智能，下载一次后速度快。yarn使用的包也是npm上的包可以在各个node版本中使用。</p>\n<h2 id=\"推荐阅读\"><a href=\"#推荐阅读\" class=\"headerlink\" title=\"推荐阅读\"></a>推荐阅读</h2><ul>\n<li><a href=\"https://yarnpkg.com/lang/zh-hans/docs/migrating-from-npm/\" target=\"_blank\" rel=\"noopener\">从 npm 迁移</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>前几天测试的时候遇到个问题，测试的时候出现依赖升级问题，由于测试同学是重新换了个机子，重装了环境，导致下载过程中依赖升级。npm带来便利的时候也带一些问题。如果您觉得比较啰嗦，直接看结果。</p>\n<p>我们的vue项目最早依赖2.1.8版本做了组件和项目，为了保证产品的稳定性，决定锁死版本。可以参考<a href=\"https://zhuanlan.zhihu.com/p/31442269\" target=\"_blank\" rel=\"noopener\">这篇文章</a>，介绍了框架升级分析的方法。</p>","more":"<p>如果你也是使用vue可能需要注意以下依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"vue-loader\"</span>: <span class=\"string\">\"9.9.5\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"vue-style-loader\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"vue\"</span>: <span class=\"string\">\"2.1.8\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"vue-template-compiler\"</span>: <span class=\"string\">\"2.1.8\"</span></span><br></pre></td></tr></table></figure>\n<p>针对这种依赖升级解决方法：</p>\n<ol>\n<li>只发布编译后的文件</li>\n</ol>\n<p>这样测试同学就无需关心，升级依赖后再重新打包发布。</p>\n<p>优点: 测试同学无需关注依赖安装<br>缺点: 产出目录充斥着各种版本的文件，增量存储repo越来越大</p>\n<ol>\n<li>不通过包管理工具，直接把 node_modules打包，测试环境解压，每次升级依赖重新发布</li>\n</ol>\n<p>开发直接把 <code>node_modules</code> 打成tar包, 部署的时候解压然后，再通过 <code>npm run test</code>打包测试. 一般现在一个项目一个node_modules打包后几十M（gzip之后），更新依赖之后解压。</p>\n<p>好处： 无网络<br>坏处： 有一些c++的npm包，在不同的系统环境下是不同的，因此在osx下的<code>node_modules</code>，在<code>Ubuntu</code>失效。 好在我们的项目没有这种依赖包，所以也可以做一种方案。若有c++的包，则需要在本地装虚拟环境，如<code>vagrant</code>或<code>docker</code>跑测试对应的环境. 每当此时心里总是在想，咱还是前端开发吗[捂脸]</p>\n<ol>\n<li>包管理工具锁死</li>\n</ol>\n<p>node发展历程中出现了几种方式来做版本锁定, 以下面<code>package.json</code>为例</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"npm-lock\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"test dependies lock way\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index.js\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"f2ecoder@vip.qq.com\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"license\"</span>: <span class=\"string\">\"MIT\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"devDependencies\"</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"vue\"</span>: <span class=\"string\">\"^2.2.0\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>没有下列命令的情况下,  查看 vue版本是 <code>2.5.9</code>, <code>npm outdate</code>没有输出，也就是最新版本。以下是三种锁定版本的方案，如果觉得文章啰嗦，可以直接查看表格比较：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">-</th>\n<th style=\"text-align:center\">npm-shrinkwrap.json</th>\n<th style=\"text-align:center\">package-lock.json</th>\n<th style=\"text-align:center\">yarn.lock</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">命令</td>\n<td style=\"text-align:center\">npm shrinkwrap</td>\n<td style=\"text-align:center\">无</td>\n<td style=\"text-align:center\">无</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">生成方式</td>\n<td style=\"text-align:center\">需要命令生成</td>\n<td style=\"text-align:center\">npm安装自动生成</td>\n<td style=\"text-align:center\">yarn安装自动生成</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">npm版本</td>\n<td style=\"text-align:center\">任意</td>\n<td style=\"text-align:center\">&gt;=5.0.0</td>\n<td style=\"text-align:center\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">额外安装</td>\n<td style=\"text-align:center\">无</td>\n<td style=\"text-align:center\">无</td>\n<td style=\"text-align:center\">yarn</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">增加依赖</td>\n<td style=\"text-align:center\">npm i -S vue@2.1.8 &amp;&amp; npm shrinkwrap</td>\n<td style=\"text-align:center\">npm i -S vue@2.1.8</td>\n<td style=\"text-align:center\">yarn add vue@2.1.8</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">更新</td>\n<td style=\"text-align:center\">npm uni -S vue &amp;&amp; npm I -S vue@2.5.1</td>\n<td style=\"text-align:center\">npm uni -S vue&amp;&amp; npm i -S vue@2.5.1</td>\n<td style=\"text-align:center\">yarn upgrade vue@2.5.1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">删除</td>\n<td style=\"text-align:center\">npm uni -S vue</td>\n<td style=\"text-align:center\">npm uni -S vue</td>\n<td style=\"text-align:center\">yarn remove vue</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">发布</td>\n<td style=\"text-align:center\">支持</td>\n<td style=\"text-align:center\">不支持</td>\n<td style=\"text-align:center\">支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">离线</td>\n<td style=\"text-align:center\">不支持</td>\n<td style=\"text-align:center\">不支持</td>\n<td style=\"text-align:center\">支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">缓存</td>\n<td style=\"text-align:center\">不支持</td>\n<td style=\"text-align:center\">不支持</td>\n<td style=\"text-align:center\">支持</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"npm-shrinkwrap\"><a href=\"#npm-shrinkwrap\" class=\"headerlink\" title=\"npm shrinkwrap\"></a>npm shrinkwrap</h2><p>为了确保我们使用的vue版本是2.2.0， 删除依赖，重新下载. 以下测试环境参数：</p>\n<p>node: v6.10.2<br>npm: 3.10.10</p>\n<p><code>npm i vue@2.2.0 -S</code>， 查看node_modules vue版本是2.2.0</p>\n<p>npm官方提供 <code>npm shrinkwrap</code>命令，生成 <code>npm-shrinkwrap.json</code>文件。</p>\n<p>下面对依赖做增加，删除，修改的操作，看看 <code>npm-shrinkwrap.json</code>变化</p>\n<p><strong>1. 增加依赖</strong></p>\n<p><code>npm  i vue-http@2.0.1 -S</code>, <code>npm-shrinkwrap.json</code> 自动将<code>vue-http</code>及其依赖添加进去</p>\n<p><strong>2. 删除依赖</strong><br><code>npm uni vue-http -S</code>, 删除的时候自动删除<code>npm-shrinkwrap.json</code>中的<code>vue-http</code>及其依赖； 若忘了加 -S 或 -D， 则无法删除， 不够智能。</p>\n<p><strong>3. 升级/降级依赖</strong></p>\n<p><code>npm up vue-http@2.0.0 -S</code> ，升级依赖，依赖没有升级，<code>npm-shrinkwrap.json</code>无更新，略显鸡肋。所以更新的话，直接通过上述方式删除，再添加吧。</p>\n<p><strong>4. 结果</strong></p>\n<p>把node_modules删掉，<code>npm i</code>， 依赖完美下载成功。</p>\n<p>优点：npm天然支持<br>缺点：需要手动触发，update不生效</p>\n<h2 id=\"yarn\"><a href=\"#yarn\" class=\"headerlink\" title=\"yarn\"></a>yarn</h2><p>重新把<code>npm shrinkwrap</code>验证逻辑跑一遍.</p>\n<p><strong>1. 新增依赖</strong></p>\n<p><code>yarn add vue@2.2.0 vue-http@1.0.0</code>的时候，自动生成了 <code>yarn.lock</code>文件及其相关依赖</p>\n<p><strong>2. 删除依赖</strong></p>\n<p><code>yarn remove vue-http</code>, 自动删除依赖</p>\n<p><strong>3. 更新依赖</strong></p>\n<p><code>yarn upgrade vue-http@2.0.1</code>， 依赖更新成功， <code>yarn.lock</code>版本更新成功</p>\n<p><strong>4. 结果</strong></p>\n<p>把node_modules删掉，<code>npm i</code>， 依赖完美下载成功。更重要的是， yarn会在本地缓存一份依赖，存储在 $HOME/.yarn-cache目录下，</p>\n<p>存储文件的规则是： registry-package_name-version，下载前会检查缓存中是否命中，若命中直接从本地获取，因此速度更快。</p>\n<p>优点: 通过yarn命令操作，可以自动更新yarn.lock，从缓存中读取速度快. 支持离线模式<br>缺点: 还需要在下载一个yarn命令</p>\n<h2 id=\"package-lock-json\"><a href=\"#package-lock-json\" class=\"headerlink\" title=\"package-lock.json\"></a>package-lock.json</h2><p><code>package-lock.json</code>是npm 5.0之后, 对应的node版本是8.0.0, npm下载的时候会自动的出现在目录中. 将Node升级到8.0.0进行以上测试.</p>\n<p><strong>1. 增加依赖</strong></p>\n<p><code>npm  i vue-http@2.0.1 -S</code>, 自动生成的<code>package-lock.json</code> 自动将<code>vue-http</code>及其依赖添加进去</p>\n<p><strong>2. 删除依赖</strong><br><code>npm uni vue-http -S</code>, 删除的时候，自动删除<code>package-lock.json</code>中的<code>vue-http</code>及其依赖； 不需要加 -S -D</p>\n<p><strong>3. 升级/降级依赖</strong></p>\n<p><code>npm up vue-http@2.0.0 -S</code> ，升级依赖，依赖没有升级，<code>package-lock.json</code>无更新，。所以更新的话，直接通过上述方式删除，再添加吧。是npm update的问题</p>\n<p><strong>4. 结果</strong></p>\n<p>把node_modules删掉，<code>npm i</code>， 依赖完美下载成功。</p>\n<p>优点：npm天然支持， 比较智能。<br>缺点：只有npm5.0之后支持，若低于8.0.0版本的node需要手动下载npm5. 另外<code>package-lock.json</code>不能发包。 因此官方给出可以通过 <code>npm shrinkwrap</code>把 <code>package-lock.json</code>重命名为 <code>npm-shrinkwrap.json</code>.</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>对比总结，采用yarn管理，好处除了安装一个依赖之后，版本锁定智能，下载一次后速度快。yarn使用的包也是npm上的包可以在各个node版本中使用。</p>\n<h2 id=\"推荐阅读\"><a href=\"#推荐阅读\" class=\"headerlink\" title=\"推荐阅读\"></a>推荐阅读</h2><ul>\n<li><a href=\"https://yarnpkg.com/lang/zh-hans/docs/migrating-from-npm/\" target=\"_blank\" rel=\"noopener\">从 npm 迁移</a></li>\n</ul>"},{"title":"vue中的mixins实践","date":"2017-09-13T11:55:00.000Z","issue":"https://github.com/jiangtao/blog/issues/11","_content":"\n奇舞周刊推荐了一篇文章[Vue.js 中使用Mixin](http://zcfy.cc/article/using-mixins-in-vue-js-css-tricks-3257.html)， 用了vue大半年时间，`mixin`不知道挺惭愧。\n\n奇舞周刊文章中已经介绍了 vue mixin。\n\n- 官方提示谨慎使用 [global mixin](http://vuejs.org/v2/guide/mixins.html#Global-Mixin)\n- 合理的场景下使用 `mixin`\n\n这里再补充一个 通用业务（埋点） 来描述 mixin的优缺点。 <!--more-->\n\n## 需求\n\n在`SPA`实现埋点需求中比较通用的需求，`进入页面` 和 `离开页面` 需要记录用户在 当前页面的 停留时间。使用`mixin`， 简化代码如下\n\n**mixin.js**\n```javascript\n\nlet cache = null // 确保进入和离开是一个page\n\nexport default {\n    methods: {\n        sendEnterPage() {\n            cache = this.$route\n            console.log('enter page', cache)\n        },\n        sendLeavePage() {\n            console.log('leave page', cache)\n        }\n    },\n    mounted(){\n        this.sendEnterPage()\n    },\n    destroyed() {\n        this.sendLeavePage()\n    }\n}\n\n```\n\n**demo.vue**  部分代码\n\n```javascript\n<script>\nimport test from 'mixins/test'\nexport default {\n    data() {\n        return { text: 'Hello World' }\n    },\n    mixins: [test],\n    methods: {\n        logic() {\n            console.log('do the logic about hello page')\n        }\n    },\n    mounted() {\n        this.logic()\n    }\n}\n```\n\n**运行结果图**\n\n![image](https://user-images.githubusercontent.com/2155745/30382229-385a8f70-9864-11e7-8fc7-01439d8a24f2.png)\n\n从图中发现，使用`局部mixin` 使用 `mounted`, `destroyed` 等组件中的生成周期方法与 mixin 是 合并； 当然实验得出 methods中的方法是被覆盖的。具体是通过 [mergeOtions function实现](https://github.com/vuejs/vue/blob/master/src/core/util/options.js)\n\n### 好处\n\n埋点这部分需求 与 核心业务 关联, 代码少，尽可能的少侵入业务。\n\n### 坏处\n\n`minxin`中的方法 以及实现 逻辑 其他同事不知道，不直观。 只能通过约定和沟通来解决。\n\n以上功能有种 “修饰” 的感觉。`es7 decorator` 支持修饰模式，当局限于 类和类的方法， vue官方提供了 [vue-class-component](https://github.com/vuejs/vue-class-component) 来解决这个问题。\n\n在`React`当中已经废弃了 `mixin`，使用了 [高阶组件](https://juejin.im/post/595243d96fb9a06bbd6f5ccd) 来解决这个问题，其实就是支持 `class`组件，结合`decorator`来\n\n代替mixin。 关于react理解的不对，请指出。\n\n前端时间闲暇的时候做了一个 [vue-mount-time](https://github.com/jiangtao/vue-mount-time/) 用来记录，第一个组件mount开始时间到 最后一个mount组件结束时间，做了一个简单的尝试。\n\n## 行为统计\n\n若需要做行为统计，可以通过 `mixin` 拦截到所有的方法， 对方法做统一收集。根据 页面地址 +  方法名 可以 确定对应的行为，从而做到[无侵入的埋点解决方案](https://github.com/vue-tools/vue-analysis)\n\n## 总结\n\n本篇是对`mixin`的看法和对业务的结合点，如有不对欢迎指正，转载请注明出处。\n\n","source":"_posts/vue-mixin-apply.md","raw":"title: vue中的mixins实践\ndate: 2017-09-13 19:55:00\ntags:\n - mixin\n - vue\nissue: https://github.com/jiangtao/blog/issues/11\n---\n\n奇舞周刊推荐了一篇文章[Vue.js 中使用Mixin](http://zcfy.cc/article/using-mixins-in-vue-js-css-tricks-3257.html)， 用了vue大半年时间，`mixin`不知道挺惭愧。\n\n奇舞周刊文章中已经介绍了 vue mixin。\n\n- 官方提示谨慎使用 [global mixin](http://vuejs.org/v2/guide/mixins.html#Global-Mixin)\n- 合理的场景下使用 `mixin`\n\n这里再补充一个 通用业务（埋点） 来描述 mixin的优缺点。 <!--more-->\n\n## 需求\n\n在`SPA`实现埋点需求中比较通用的需求，`进入页面` 和 `离开页面` 需要记录用户在 当前页面的 停留时间。使用`mixin`， 简化代码如下\n\n**mixin.js**\n```javascript\n\nlet cache = null // 确保进入和离开是一个page\n\nexport default {\n    methods: {\n        sendEnterPage() {\n            cache = this.$route\n            console.log('enter page', cache)\n        },\n        sendLeavePage() {\n            console.log('leave page', cache)\n        }\n    },\n    mounted(){\n        this.sendEnterPage()\n    },\n    destroyed() {\n        this.sendLeavePage()\n    }\n}\n\n```\n\n**demo.vue**  部分代码\n\n```javascript\n<script>\nimport test from 'mixins/test'\nexport default {\n    data() {\n        return { text: 'Hello World' }\n    },\n    mixins: [test],\n    methods: {\n        logic() {\n            console.log('do the logic about hello page')\n        }\n    },\n    mounted() {\n        this.logic()\n    }\n}\n```\n\n**运行结果图**\n\n![image](https://user-images.githubusercontent.com/2155745/30382229-385a8f70-9864-11e7-8fc7-01439d8a24f2.png)\n\n从图中发现，使用`局部mixin` 使用 `mounted`, `destroyed` 等组件中的生成周期方法与 mixin 是 合并； 当然实验得出 methods中的方法是被覆盖的。具体是通过 [mergeOtions function实现](https://github.com/vuejs/vue/blob/master/src/core/util/options.js)\n\n### 好处\n\n埋点这部分需求 与 核心业务 关联, 代码少，尽可能的少侵入业务。\n\n### 坏处\n\n`minxin`中的方法 以及实现 逻辑 其他同事不知道，不直观。 只能通过约定和沟通来解决。\n\n以上功能有种 “修饰” 的感觉。`es7 decorator` 支持修饰模式，当局限于 类和类的方法， vue官方提供了 [vue-class-component](https://github.com/vuejs/vue-class-component) 来解决这个问题。\n\n在`React`当中已经废弃了 `mixin`，使用了 [高阶组件](https://juejin.im/post/595243d96fb9a06bbd6f5ccd) 来解决这个问题，其实就是支持 `class`组件，结合`decorator`来\n\n代替mixin。 关于react理解的不对，请指出。\n\n前端时间闲暇的时候做了一个 [vue-mount-time](https://github.com/jiangtao/vue-mount-time/) 用来记录，第一个组件mount开始时间到 最后一个mount组件结束时间，做了一个简单的尝试。\n\n## 行为统计\n\n若需要做行为统计，可以通过 `mixin` 拦截到所有的方法， 对方法做统一收集。根据 页面地址 +  方法名 可以 确定对应的行为，从而做到[无侵入的埋点解决方案](https://github.com/vue-tools/vue-analysis)\n\n## 总结\n\n本篇是对`mixin`的看法和对业务的结合点，如有不对欢迎指正，转载请注明出处。\n\n","slug":"vue-mixin-apply","published":1,"updated":"2018-02-12T02:31:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdjm44v70005ldvgcjx69a74","content":"<p>奇舞周刊推荐了一篇文章<a href=\"http://zcfy.cc/article/using-mixins-in-vue-js-css-tricks-3257.html\" target=\"_blank\" rel=\"noopener\">Vue.js 中使用Mixin</a>， 用了vue大半年时间，<code>mixin</code>不知道挺惭愧。</p>\n<p>奇舞周刊文章中已经介绍了 vue mixin。</p>\n<ul>\n<li>官方提示谨慎使用 <a href=\"http://vuejs.org/v2/guide/mixins.html#Global-Mixin\" target=\"_blank\" rel=\"noopener\">global mixin</a></li>\n<li>合理的场景下使用 <code>mixin</code></li>\n</ul>\n<p>这里再补充一个 通用业务（埋点） 来描述 mixin的优缺点。 <a id=\"more\"></a></p>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>在<code>SPA</code>实现埋点需求中比较通用的需求，<code>进入页面</code> 和 <code>离开页面</code> 需要记录用户在 当前页面的 停留时间。使用<code>mixin</code>， 简化代码如下</p>\n<p><strong>mixin.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> cache = <span class=\"literal\">null</span> <span class=\"comment\">// 确保进入和离开是一个page</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">        sendEnterPage() &#123;</span><br><span class=\"line\">            cache = <span class=\"keyword\">this</span>.$route</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'enter page'</span>, cache)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        sendLeavePage() &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'leave page'</span>, cache)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.sendEnterPage()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    destroyed() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.sendLeavePage()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>demo.vue</strong>  部分代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> test <span class=\"keyword\">from</span> <span class=\"string\">'mixins/test'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123; <span class=\"attr\">text</span>: <span class=\"string\">'Hello World'</span> &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mixins: [test],</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">        logic() &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'do the logic about hello page'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.logic()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>运行结果图</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/2155745/30382229-385a8f70-9864-11e7-8fc7-01439d8a24f2.png\" alt=\"image\"></p>\n<p>从图中发现，使用<code>局部mixin</code> 使用 <code>mounted</code>, <code>destroyed</code> 等组件中的生成周期方法与 mixin 是 合并； 当然实验得出 methods中的方法是被覆盖的。具体是通过 <a href=\"https://github.com/vuejs/vue/blob/master/src/core/util/options.js\" target=\"_blank\" rel=\"noopener\">mergeOtions function实现</a></p>\n<h3 id=\"好处\"><a href=\"#好处\" class=\"headerlink\" title=\"好处\"></a>好处</h3><p>埋点这部分需求 与 核心业务 关联, 代码少，尽可能的少侵入业务。</p>\n<h3 id=\"坏处\"><a href=\"#坏处\" class=\"headerlink\" title=\"坏处\"></a>坏处</h3><p><code>minxin</code>中的方法 以及实现 逻辑 其他同事不知道，不直观。 只能通过约定和沟通来解决。</p>\n<p>以上功能有种 “修饰” 的感觉。<code>es7 decorator</code> 支持修饰模式，当局限于 类和类的方法， vue官方提供了 <a href=\"https://github.com/vuejs/vue-class-component\" target=\"_blank\" rel=\"noopener\">vue-class-component</a> 来解决这个问题。</p>\n<p>在<code>React</code>当中已经废弃了 <code>mixin</code>，使用了 <a href=\"https://juejin.im/post/595243d96fb9a06bbd6f5ccd\" target=\"_blank\" rel=\"noopener\">高阶组件</a> 来解决这个问题，其实就是支持 <code>class</code>组件，结合<code>decorator</code>来</p>\n<p>代替mixin。 关于react理解的不对，请指出。</p>\n<p>前端时间闲暇的时候做了一个 <a href=\"https://github.com/jiangtao/vue-mount-time/\" target=\"_blank\" rel=\"noopener\">vue-mount-time</a> 用来记录，第一个组件mount开始时间到 最后一个mount组件结束时间，做了一个简单的尝试。</p>\n<h2 id=\"行为统计\"><a href=\"#行为统计\" class=\"headerlink\" title=\"行为统计\"></a>行为统计</h2><p>若需要做行为统计，可以通过 <code>mixin</code> 拦截到所有的方法， 对方法做统一收集。根据 页面地址 +  方法名 可以 确定对应的行为，从而做到<a href=\"https://github.com/vue-tools/vue-analysis\" target=\"_blank\" rel=\"noopener\">无侵入的埋点解决方案</a></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本篇是对<code>mixin</code>的看法和对业务的结合点，如有不对欢迎指正，转载请注明出处。</p>\n","site":{"data":{}},"excerpt":"<p>奇舞周刊推荐了一篇文章<a href=\"http://zcfy.cc/article/using-mixins-in-vue-js-css-tricks-3257.html\" target=\"_blank\" rel=\"noopener\">Vue.js 中使用Mixin</a>， 用了vue大半年时间，<code>mixin</code>不知道挺惭愧。</p>\n<p>奇舞周刊文章中已经介绍了 vue mixin。</p>\n<ul>\n<li>官方提示谨慎使用 <a href=\"http://vuejs.org/v2/guide/mixins.html#Global-Mixin\" target=\"_blank\" rel=\"noopener\">global mixin</a></li>\n<li>合理的场景下使用 <code>mixin</code></li>\n</ul>\n<p>这里再补充一个 通用业务（埋点） 来描述 mixin的优缺点。","more":"</p>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>在<code>SPA</code>实现埋点需求中比较通用的需求，<code>进入页面</code> 和 <code>离开页面</code> 需要记录用户在 当前页面的 停留时间。使用<code>mixin</code>， 简化代码如下</p>\n<p><strong>mixin.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> cache = <span class=\"literal\">null</span> <span class=\"comment\">// 确保进入和离开是一个page</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">        sendEnterPage() &#123;</span><br><span class=\"line\">            cache = <span class=\"keyword\">this</span>.$route</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'enter page'</span>, cache)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        sendLeavePage() &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'leave page'</span>, cache)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.sendEnterPage()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    destroyed() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.sendLeavePage()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>demo.vue</strong>  部分代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> test <span class=\"keyword\">from</span> <span class=\"string\">'mixins/test'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123; <span class=\"attr\">text</span>: <span class=\"string\">'Hello World'</span> &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mixins: [test],</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">        logic() &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'do the logic about hello page'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.logic()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>运行结果图</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/2155745/30382229-385a8f70-9864-11e7-8fc7-01439d8a24f2.png\" alt=\"image\"></p>\n<p>从图中发现，使用<code>局部mixin</code> 使用 <code>mounted</code>, <code>destroyed</code> 等组件中的生成周期方法与 mixin 是 合并； 当然实验得出 methods中的方法是被覆盖的。具体是通过 <a href=\"https://github.com/vuejs/vue/blob/master/src/core/util/options.js\" target=\"_blank\" rel=\"noopener\">mergeOtions function实现</a></p>\n<h3 id=\"好处\"><a href=\"#好处\" class=\"headerlink\" title=\"好处\"></a>好处</h3><p>埋点这部分需求 与 核心业务 关联, 代码少，尽可能的少侵入业务。</p>\n<h3 id=\"坏处\"><a href=\"#坏处\" class=\"headerlink\" title=\"坏处\"></a>坏处</h3><p><code>minxin</code>中的方法 以及实现 逻辑 其他同事不知道，不直观。 只能通过约定和沟通来解决。</p>\n<p>以上功能有种 “修饰” 的感觉。<code>es7 decorator</code> 支持修饰模式，当局限于 类和类的方法， vue官方提供了 <a href=\"https://github.com/vuejs/vue-class-component\" target=\"_blank\" rel=\"noopener\">vue-class-component</a> 来解决这个问题。</p>\n<p>在<code>React</code>当中已经废弃了 <code>mixin</code>，使用了 <a href=\"https://juejin.im/post/595243d96fb9a06bbd6f5ccd\" target=\"_blank\" rel=\"noopener\">高阶组件</a> 来解决这个问题，其实就是支持 <code>class</code>组件，结合<code>decorator</code>来</p>\n<p>代替mixin。 关于react理解的不对，请指出。</p>\n<p>前端时间闲暇的时候做了一个 <a href=\"https://github.com/jiangtao/vue-mount-time/\" target=\"_blank\" rel=\"noopener\">vue-mount-time</a> 用来记录，第一个组件mount开始时间到 最后一个mount组件结束时间，做了一个简单的尝试。</p>\n<h2 id=\"行为统计\"><a href=\"#行为统计\" class=\"headerlink\" title=\"行为统计\"></a>行为统计</h2><p>若需要做行为统计，可以通过 <code>mixin</code> 拦截到所有的方法， 对方法做统一收集。根据 页面地址 +  方法名 可以 确定对应的行为，从而做到<a href=\"https://github.com/vue-tools/vue-analysis\" target=\"_blank\" rel=\"noopener\">无侵入的埋点解决方案</a></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本篇是对<code>mixin</code>的看法和对业务的结合点，如有不对欢迎指正，转载请注明出处。</p>"},{"title":"从一个爬虫初识puppeteer","date":"2017-11-08T11:55:00.000Z","issue":"https://github.com/jiangtao/blog/issues/15","_content":"\n\n前段时间破事群讨论问题，突然提到一个新名词 `puppeteer`，于是好奇查了下干什么的。于是一发不可收拾。\n\n<!--more-->\n\n## 什么是puppeteer\n\n来自官方的介绍：\n\n> Puppeteer是一个Node库，提供一套高度封装的API， 通过[DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/)来控制[headless](https://developers.google.com/web/updates/2017/04/headless-chrome) Chrome\n\n\n## 能干什么\n\n来自官方的描述：\n\n> 很多事情可以使用Puppeteer在浏览器中手工完成，下面是一些可以上手的例子：\n\n* 生成屏幕快照和pdf\n* 爬取单页面应用和预渲染内容\n* 获取网页内容\n* 全自动的form提交, UI测试, 键盘输入等等.\n* 创建一个最新的，自动的测试环境。直接使用最新版本的chrome，使用最新的JavaScript和浏览器特性，跑你的测试用例\n* 捕获你网站的[timeline trace](https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference)， 诊断性能问题\n\n## 爬取百度图片\n\n爬取特定 **关键词** 搜索出来的图片，百度图片分为 首页和详情页\n\n## 百度图片首页爬取特点\n\n- 图片一般较小，需要过滤掉小图\n- 需要滚动加载显示更多图片，需要程序自动滚动\n\n## 百度图片详情页爬取特点\n\n- 以图片展示框展示，需要自动点击下一页\n\n## 图片抓取通用点\n\n因为`Puppeteer`可以监听网络请求和响应，所以只需要在请求和响应的时候做处理即可。\n为了保证图片尺寸，我们这里以响应时做处理。若读者需要快速的请求，不在乎小图啊，可以通过请求的时候来做处理，这样效率更快一点。\n\n下面我们一块来撸一个百度图片的爬虫。 **注：** 本教程只用做演示，请大家不要搞百度呀~\n\n## 以首页爬取来开始Puppeteer\n\n1. 首先创建 Page 实例\n\n```javascript\n  const browser = await puppeteer.launch({\n    headless: false\n  })\n  const page = await browser.newPage()\n  // 若需要request， 把事件改成 request 即可，但拿到的是request的信息\n  page.on('response', async(data) => {\n    // 判定拿到的数据是否是图片， 也可以根据url规则挑选出自己想要的url\n    if (isDownloadImageByResponse(data)) {\n      // 下载图片逻辑\n    }\n  })\n```\n\n2. 自动滚动逻辑\n\n通过 `window.scrollBy` api控制滚动条自动滚动, 代码如下\n\n```javascript\nmodule.exports = async function autoScroll(page) {\n  await page.evaluate(async () => {\n    await new Promise((resolve, reject) => {\n      try {\n        let lastScroll = 0\n        const maxScroll = Number.MAX_SAFE_INTEGER\n        const interval = setInterval(() => {\n          window.scrollBy(0, 100)\n          const scrollTop = document.documentElement.scrollTop\n          if (scrollTop === maxScroll || lastScroll === scrollTop) {\n            clearInterval(interval)\n            resolve()\n          } else {\n            lastScroll = scrollTop\n          }\n        }, 100)\n      } catch (err) {\n        reject(err.toString())\n      }\n    })\n  })\n}\n```\n\n这样一个滚屏的爬虫逻辑就完成了，[具体的代码请查看](https://github.com/ijs/pcralwer)，而且不需要解析dom，也不用担心网站改版之类了，生活瞬间变得美好。\n\n## 总结\n\n`Puppeteer`带来的是更方便的操作headless chrome, 对于前端而言，可以做更好的测试，如基本的操作测试，线上页面屏幕快照抓取和分析等等。\n当然在很久之前也有类似的实现，比如 `Phantomjs`之流，`Puppeteer`相对而言使用浏览器最新的api，对前端而言上面更快。如果你又兴趣，不妨去利用`Puppeteer`做一些事儿。\n\n您喜欢欢迎star or fork，转载请注明出处\n\n\n\n","source":"_posts/puppeteer-start.md","raw":"title: 从一个爬虫初识puppeteer\ndate: 2017-11-08 19:55:00\ntags:\n - puppeteer\n - crawler\nissue: https://github.com/jiangtao/blog/issues/15\n---\n\n\n前段时间破事群讨论问题，突然提到一个新名词 `puppeteer`，于是好奇查了下干什么的。于是一发不可收拾。\n\n<!--more-->\n\n## 什么是puppeteer\n\n来自官方的介绍：\n\n> Puppeteer是一个Node库，提供一套高度封装的API， 通过[DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/)来控制[headless](https://developers.google.com/web/updates/2017/04/headless-chrome) Chrome\n\n\n## 能干什么\n\n来自官方的描述：\n\n> 很多事情可以使用Puppeteer在浏览器中手工完成，下面是一些可以上手的例子：\n\n* 生成屏幕快照和pdf\n* 爬取单页面应用和预渲染内容\n* 获取网页内容\n* 全自动的form提交, UI测试, 键盘输入等等.\n* 创建一个最新的，自动的测试环境。直接使用最新版本的chrome，使用最新的JavaScript和浏览器特性，跑你的测试用例\n* 捕获你网站的[timeline trace](https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference)， 诊断性能问题\n\n## 爬取百度图片\n\n爬取特定 **关键词** 搜索出来的图片，百度图片分为 首页和详情页\n\n## 百度图片首页爬取特点\n\n- 图片一般较小，需要过滤掉小图\n- 需要滚动加载显示更多图片，需要程序自动滚动\n\n## 百度图片详情页爬取特点\n\n- 以图片展示框展示，需要自动点击下一页\n\n## 图片抓取通用点\n\n因为`Puppeteer`可以监听网络请求和响应，所以只需要在请求和响应的时候做处理即可。\n为了保证图片尺寸，我们这里以响应时做处理。若读者需要快速的请求，不在乎小图啊，可以通过请求的时候来做处理，这样效率更快一点。\n\n下面我们一块来撸一个百度图片的爬虫。 **注：** 本教程只用做演示，请大家不要搞百度呀~\n\n## 以首页爬取来开始Puppeteer\n\n1. 首先创建 Page 实例\n\n```javascript\n  const browser = await puppeteer.launch({\n    headless: false\n  })\n  const page = await browser.newPage()\n  // 若需要request， 把事件改成 request 即可，但拿到的是request的信息\n  page.on('response', async(data) => {\n    // 判定拿到的数据是否是图片， 也可以根据url规则挑选出自己想要的url\n    if (isDownloadImageByResponse(data)) {\n      // 下载图片逻辑\n    }\n  })\n```\n\n2. 自动滚动逻辑\n\n通过 `window.scrollBy` api控制滚动条自动滚动, 代码如下\n\n```javascript\nmodule.exports = async function autoScroll(page) {\n  await page.evaluate(async () => {\n    await new Promise((resolve, reject) => {\n      try {\n        let lastScroll = 0\n        const maxScroll = Number.MAX_SAFE_INTEGER\n        const interval = setInterval(() => {\n          window.scrollBy(0, 100)\n          const scrollTop = document.documentElement.scrollTop\n          if (scrollTop === maxScroll || lastScroll === scrollTop) {\n            clearInterval(interval)\n            resolve()\n          } else {\n            lastScroll = scrollTop\n          }\n        }, 100)\n      } catch (err) {\n        reject(err.toString())\n      }\n    })\n  })\n}\n```\n\n这样一个滚屏的爬虫逻辑就完成了，[具体的代码请查看](https://github.com/ijs/pcralwer)，而且不需要解析dom，也不用担心网站改版之类了，生活瞬间变得美好。\n\n## 总结\n\n`Puppeteer`带来的是更方便的操作headless chrome, 对于前端而言，可以做更好的测试，如基本的操作测试，线上页面屏幕快照抓取和分析等等。\n当然在很久之前也有类似的实现，比如 `Phantomjs`之流，`Puppeteer`相对而言使用浏览器最新的api，对前端而言上面更快。如果你又兴趣，不妨去利用`Puppeteer`做一些事儿。\n\n您喜欢欢迎star or fork，转载请注明出处\n\n\n\n","slug":"puppeteer-start","published":1,"updated":"2018-02-12T02:31:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdjm44v90006ldvgtwnk7dbv","content":"<p>前段时间破事群讨论问题，突然提到一个新名词 <code>puppeteer</code>，于是好奇查了下干什么的。于是一发不可收拾。</p>\n<a id=\"more\"></a>\n<h2 id=\"什么是puppeteer\"><a href=\"#什么是puppeteer\" class=\"headerlink\" title=\"什么是puppeteer\"></a>什么是puppeteer</h2><p>来自官方的介绍：</p>\n<blockquote>\n<p>Puppeteer是一个Node库，提供一套高度封装的API， 通过<a href=\"https://chromedevtools.github.io/devtools-protocol/\" target=\"_blank\" rel=\"noopener\">DevTools Protocol</a>来控制<a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\" target=\"_blank\" rel=\"noopener\">headless</a> Chrome</p>\n</blockquote>\n<h2 id=\"能干什么\"><a href=\"#能干什么\" class=\"headerlink\" title=\"能干什么\"></a>能干什么</h2><p>来自官方的描述：</p>\n<blockquote>\n<p>很多事情可以使用Puppeteer在浏览器中手工完成，下面是一些可以上手的例子：</p>\n</blockquote>\n<ul>\n<li>生成屏幕快照和pdf</li>\n<li>爬取单页面应用和预渲染内容</li>\n<li>获取网页内容</li>\n<li>全自动的form提交, UI测试, 键盘输入等等.</li>\n<li>创建一个最新的，自动的测试环境。直接使用最新版本的chrome，使用最新的JavaScript和浏览器特性，跑你的测试用例</li>\n<li>捕获你网站的<a href=\"https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference\" target=\"_blank\" rel=\"noopener\">timeline trace</a>， 诊断性能问题</li>\n</ul>\n<h2 id=\"爬取百度图片\"><a href=\"#爬取百度图片\" class=\"headerlink\" title=\"爬取百度图片\"></a>爬取百度图片</h2><p>爬取特定 <strong>关键词</strong> 搜索出来的图片，百度图片分为 首页和详情页</p>\n<h2 id=\"百度图片首页爬取特点\"><a href=\"#百度图片首页爬取特点\" class=\"headerlink\" title=\"百度图片首页爬取特点\"></a>百度图片首页爬取特点</h2><ul>\n<li>图片一般较小，需要过滤掉小图</li>\n<li>需要滚动加载显示更多图片，需要程序自动滚动</li>\n</ul>\n<h2 id=\"百度图片详情页爬取特点\"><a href=\"#百度图片详情页爬取特点\" class=\"headerlink\" title=\"百度图片详情页爬取特点\"></a>百度图片详情页爬取特点</h2><ul>\n<li>以图片展示框展示，需要自动点击下一页</li>\n</ul>\n<h2 id=\"图片抓取通用点\"><a href=\"#图片抓取通用点\" class=\"headerlink\" title=\"图片抓取通用点\"></a>图片抓取通用点</h2><p>因为<code>Puppeteer</code>可以监听网络请求和响应，所以只需要在请求和响应的时候做处理即可。<br>为了保证图片尺寸，我们这里以响应时做处理。若读者需要快速的请求，不在乎小图啊，可以通过请求的时候来做处理，这样效率更快一点。</p>\n<p>下面我们一块来撸一个百度图片的爬虫。 <strong>注：</strong> 本教程只用做演示，请大家不要搞百度呀~</p>\n<h2 id=\"以首页爬取来开始Puppeteer\"><a href=\"#以首页爬取来开始Puppeteer\" class=\"headerlink\" title=\"以首页爬取来开始Puppeteer\"></a>以首页爬取来开始Puppeteer</h2><ol>\n<li>首先创建 Page 实例</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> browser = <span class=\"keyword\">await</span> puppeteer.launch(&#123;</span><br><span class=\"line\">  headless: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> page = <span class=\"keyword\">await</span> browser.newPage()</span><br><span class=\"line\"><span class=\"comment\">// 若需要request， 把事件改成 request 即可，但拿到的是request的信息</span></span><br><span class=\"line\">page.on(<span class=\"string\">'response'</span>, <span class=\"keyword\">async</span>(data) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 判定拿到的数据是否是图片， 也可以根据url规则挑选出自己想要的url</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isDownloadImageByResponse(data)) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 下载图片逻辑</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol>\n<li>自动滚动逻辑</li>\n</ol>\n<p>通过 <code>window.scrollBy</code> api控制滚动条自动滚动, 代码如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">autoScroll</span>(<span class=\"params\">page</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> page.evaluate(<span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> lastScroll = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> maxScroll = <span class=\"built_in\">Number</span>.MAX_SAFE_INTEGER</span><br><span class=\"line\">        <span class=\"keyword\">const</span> interval = setInterval(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">window</span>.scrollBy(<span class=\"number\">0</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> scrollTop = <span class=\"built_in\">document</span>.documentElement.scrollTop</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (scrollTop === maxScroll || lastScroll === scrollTop) &#123;</span><br><span class=\"line\">            clearInterval(interval)</span><br><span class=\"line\">            resolve()</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            lastScroll = scrollTop</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;, <span class=\"number\">100</span>)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">        reject(err.toString())</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样一个滚屏的爬虫逻辑就完成了，<a href=\"https://github.com/ijs/pcralwer\" target=\"_blank\" rel=\"noopener\">具体的代码请查看</a>，而且不需要解析dom，也不用担心网站改版之类了，生活瞬间变得美好。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p><code>Puppeteer</code>带来的是更方便的操作headless chrome, 对于前端而言，可以做更好的测试，如基本的操作测试，线上页面屏幕快照抓取和分析等等。<br>当然在很久之前也有类似的实现，比如 <code>Phantomjs</code>之流，<code>Puppeteer</code>相对而言使用浏览器最新的api，对前端而言上面更快。如果你又兴趣，不妨去利用<code>Puppeteer</code>做一些事儿。</p>\n<p>您喜欢欢迎star or fork，转载请注明出处</p>\n","site":{"data":{}},"excerpt":"<p>前段时间破事群讨论问题，突然提到一个新名词 <code>puppeteer</code>，于是好奇查了下干什么的。于是一发不可收拾。</p>","more":"<h2 id=\"什么是puppeteer\"><a href=\"#什么是puppeteer\" class=\"headerlink\" title=\"什么是puppeteer\"></a>什么是puppeteer</h2><p>来自官方的介绍：</p>\n<blockquote>\n<p>Puppeteer是一个Node库，提供一套高度封装的API， 通过<a href=\"https://chromedevtools.github.io/devtools-protocol/\" target=\"_blank\" rel=\"noopener\">DevTools Protocol</a>来控制<a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\" target=\"_blank\" rel=\"noopener\">headless</a> Chrome</p>\n</blockquote>\n<h2 id=\"能干什么\"><a href=\"#能干什么\" class=\"headerlink\" title=\"能干什么\"></a>能干什么</h2><p>来自官方的描述：</p>\n<blockquote>\n<p>很多事情可以使用Puppeteer在浏览器中手工完成，下面是一些可以上手的例子：</p>\n</blockquote>\n<ul>\n<li>生成屏幕快照和pdf</li>\n<li>爬取单页面应用和预渲染内容</li>\n<li>获取网页内容</li>\n<li>全自动的form提交, UI测试, 键盘输入等等.</li>\n<li>创建一个最新的，自动的测试环境。直接使用最新版本的chrome，使用最新的JavaScript和浏览器特性，跑你的测试用例</li>\n<li>捕获你网站的<a href=\"https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference\" target=\"_blank\" rel=\"noopener\">timeline trace</a>， 诊断性能问题</li>\n</ul>\n<h2 id=\"爬取百度图片\"><a href=\"#爬取百度图片\" class=\"headerlink\" title=\"爬取百度图片\"></a>爬取百度图片</h2><p>爬取特定 <strong>关键词</strong> 搜索出来的图片，百度图片分为 首页和详情页</p>\n<h2 id=\"百度图片首页爬取特点\"><a href=\"#百度图片首页爬取特点\" class=\"headerlink\" title=\"百度图片首页爬取特点\"></a>百度图片首页爬取特点</h2><ul>\n<li>图片一般较小，需要过滤掉小图</li>\n<li>需要滚动加载显示更多图片，需要程序自动滚动</li>\n</ul>\n<h2 id=\"百度图片详情页爬取特点\"><a href=\"#百度图片详情页爬取特点\" class=\"headerlink\" title=\"百度图片详情页爬取特点\"></a>百度图片详情页爬取特点</h2><ul>\n<li>以图片展示框展示，需要自动点击下一页</li>\n</ul>\n<h2 id=\"图片抓取通用点\"><a href=\"#图片抓取通用点\" class=\"headerlink\" title=\"图片抓取通用点\"></a>图片抓取通用点</h2><p>因为<code>Puppeteer</code>可以监听网络请求和响应，所以只需要在请求和响应的时候做处理即可。<br>为了保证图片尺寸，我们这里以响应时做处理。若读者需要快速的请求，不在乎小图啊，可以通过请求的时候来做处理，这样效率更快一点。</p>\n<p>下面我们一块来撸一个百度图片的爬虫。 <strong>注：</strong> 本教程只用做演示，请大家不要搞百度呀~</p>\n<h2 id=\"以首页爬取来开始Puppeteer\"><a href=\"#以首页爬取来开始Puppeteer\" class=\"headerlink\" title=\"以首页爬取来开始Puppeteer\"></a>以首页爬取来开始Puppeteer</h2><ol>\n<li>首先创建 Page 实例</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> browser = <span class=\"keyword\">await</span> puppeteer.launch(&#123;</span><br><span class=\"line\">  headless: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> page = <span class=\"keyword\">await</span> browser.newPage()</span><br><span class=\"line\"><span class=\"comment\">// 若需要request， 把事件改成 request 即可，但拿到的是request的信息</span></span><br><span class=\"line\">page.on(<span class=\"string\">'response'</span>, <span class=\"keyword\">async</span>(data) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 判定拿到的数据是否是图片， 也可以根据url规则挑选出自己想要的url</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isDownloadImageByResponse(data)) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 下载图片逻辑</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol>\n<li>自动滚动逻辑</li>\n</ol>\n<p>通过 <code>window.scrollBy</code> api控制滚动条自动滚动, 代码如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">autoScroll</span>(<span class=\"params\">page</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> page.evaluate(<span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> lastScroll = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> maxScroll = <span class=\"built_in\">Number</span>.MAX_SAFE_INTEGER</span><br><span class=\"line\">        <span class=\"keyword\">const</span> interval = setInterval(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">window</span>.scrollBy(<span class=\"number\">0</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> scrollTop = <span class=\"built_in\">document</span>.documentElement.scrollTop</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (scrollTop === maxScroll || lastScroll === scrollTop) &#123;</span><br><span class=\"line\">            clearInterval(interval)</span><br><span class=\"line\">            resolve()</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            lastScroll = scrollTop</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;, <span class=\"number\">100</span>)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">        reject(err.toString())</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样一个滚屏的爬虫逻辑就完成了，<a href=\"https://github.com/ijs/pcralwer\" target=\"_blank\" rel=\"noopener\">具体的代码请查看</a>，而且不需要解析dom，也不用担心网站改版之类了，生活瞬间变得美好。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p><code>Puppeteer</code>带来的是更方便的操作headless chrome, 对于前端而言，可以做更好的测试，如基本的操作测试，线上页面屏幕快照抓取和分析等等。<br>当然在很久之前也有类似的实现，比如 <code>Phantomjs</code>之流，<code>Puppeteer</code>相对而言使用浏览器最新的api，对前端而言上面更快。如果你又兴趣，不妨去利用<code>Puppeteer</code>做一些事儿。</p>\n<p>您喜欢欢迎star or fork，转载请注明出处</p>"},{"title":"将webp接入到vue项目","date":"2017-09-13T11:55:00.000Z","issue":"https://github.com/jiangtao/blog/issues/10","_content":"\n前段时间和朋友聊天，无意间问了一个`vue`移动端项目优化。针对老的项目怎么提升更好的性能。本人这方面经验不足，忙里偷闲研究了下淘宝，聚划算等网站。\n\n通过`network`抓包，对比分析得出几个显著的区别 <!--more-->\n\n## 调研结果\n\n- 支持webp，优先使用webp\n- 滚动加载图片\n- 资源离线存储\n\n## webp\n\n腾讯isux写了篇文章介绍webp，感兴趣同学可以[查阅](https://isux.tencent.com/introduction-of-webp.html)， 总体来说，\n同等质量的图片webp较小. 那么，如何接入webp到vue项目中。\n\n### 接入webp，得先有webp\n\n生成webp的几种方式：\n\n#### 本地生成webp，上传到cdn\n\ngoogle提供了 `CWebp` 工具，方便开发者使用。\n在现在的vue/react项目中， 以`webpack`做构建的项目居多，为了更方便的在webpack构建中接入webp，一个叫 [webp-webpack-plugin](https://github.com/jiangtao/webp-webpack-plugin) 的插件诞生，感兴趣可以查阅源码。 该插件生成webp为：**编译后的图.webp** ， 如\n`vue.e3e41b1.jpg` ， `vue.e3e41b1.jpg.webp`。 将生成后的图片上传到cdn即可\n\n#### cdn支持\n\ncdn支持webp。图片上传到cdn之后，直接通过url规则访问图片即可得到webp\n\n#### 通过service worker支持\n\n使用service worker拦截请求，改变图片的`content-type`为webp，使用浏览器对webp天然压缩做支持。 [声享](https://ppt.baomitu.com/) 是通过这种方式实现的。\n\n### 滚动加载图片\n\n当我们有了原图和webp地址后，可以做进一步优化。滚动条**滚动到可视区域内显示图片** 。考虑到要做 **webp的兼容方案**，需要“动态\"处理，在vue自定义一个 `Image` 重写现有的img功能，支持以下功能：\n\n1. 根据webp支持程度，引用对应的图片\n\n2. 支持lazyload\n\n于是封装了vue image组件[vt-image](https://github.com/vue-tools/vt-image)， 旨在提升图片的性能。感兴趣可以查阅源码. 点击可查看[Demo](https://vue-tools.github.io/vt-image/#/demo)\n\n通过js判定支持webp：\n\n```javascript\nfunction detectWebp() {\n    var canvas, supportCanvas\n\n    canvas = document.createElement('canvas')\n    supportCanvas = canvas.getContext && canvas.getContext('2d')\n\n    if (supportCanvas) {\n        canvas.width = canvas.height = 1\n        return canvas.toDataURL('image/webp', 0.01).indexOf('image/webp') != -1\n    } else {\n        return false\n    }\n}\n```\n\n### 资源离线存储\n\n**使用 localStorage 做离线方案**\n\n关于localStorage的可以查看[知乎这篇讨论](https://www.zhihu.com/question/28467444)，详细说明了利弊\n\n**使用 service worker 做离线方案**\n\nwebpack插件[offline-plugin](https://github.com/NekR/offline-plugin)， 对webpack打包的资源做了service worker和AppCache以及兼容方案。\n\n另外一个[serviceworker-webpack-plugin](https://github.com/oliviertassinari/serviceworker-webpack-plugin)只处理`service worker`，`sw.js`也是自己处理，自定义和扩展比较方便。可以从`chrome network`查看效果：[Demo](https://vue-tools.github.io/vt-image/#/demo)\n\n### 总结\n\n问题和过程往往比结论更重要，站在巨人的肩膀上，吸收优点引用到自己的项目。如果没有符合需求的，根据 `场景`，考虑`成本`，`收益`，要么换条路走，要么就造个吧。\n\n如果您觉得 [webp-webpack-plugin](https://github.com/jiangtao/webp-webpack-plugin) 和 [vt-image](https://github.com/vue-tools/vt-image) 对您有用，star 和 提issue 将是对作者最好的鼓励。\n\n感谢您花了宝贵的时间阅读，如有错误，欢迎指正。\n\n转载请注明出处，谢谢！\n\n","source":"_posts/vue-webp.md","raw":"title: 将webp接入到vue项目\ndate: 2017-09-13 19:55:00\ntags:\n - webp\n - vue\n\nissue: https://github.com/jiangtao/blog/issues/10\n---\n\n前段时间和朋友聊天，无意间问了一个`vue`移动端项目优化。针对老的项目怎么提升更好的性能。本人这方面经验不足，忙里偷闲研究了下淘宝，聚划算等网站。\n\n通过`network`抓包，对比分析得出几个显著的区别 <!--more-->\n\n## 调研结果\n\n- 支持webp，优先使用webp\n- 滚动加载图片\n- 资源离线存储\n\n## webp\n\n腾讯isux写了篇文章介绍webp，感兴趣同学可以[查阅](https://isux.tencent.com/introduction-of-webp.html)， 总体来说，\n同等质量的图片webp较小. 那么，如何接入webp到vue项目中。\n\n### 接入webp，得先有webp\n\n生成webp的几种方式：\n\n#### 本地生成webp，上传到cdn\n\ngoogle提供了 `CWebp` 工具，方便开发者使用。\n在现在的vue/react项目中， 以`webpack`做构建的项目居多，为了更方便的在webpack构建中接入webp，一个叫 [webp-webpack-plugin](https://github.com/jiangtao/webp-webpack-plugin) 的插件诞生，感兴趣可以查阅源码。 该插件生成webp为：**编译后的图.webp** ， 如\n`vue.e3e41b1.jpg` ， `vue.e3e41b1.jpg.webp`。 将生成后的图片上传到cdn即可\n\n#### cdn支持\n\ncdn支持webp。图片上传到cdn之后，直接通过url规则访问图片即可得到webp\n\n#### 通过service worker支持\n\n使用service worker拦截请求，改变图片的`content-type`为webp，使用浏览器对webp天然压缩做支持。 [声享](https://ppt.baomitu.com/) 是通过这种方式实现的。\n\n### 滚动加载图片\n\n当我们有了原图和webp地址后，可以做进一步优化。滚动条**滚动到可视区域内显示图片** 。考虑到要做 **webp的兼容方案**，需要“动态\"处理，在vue自定义一个 `Image` 重写现有的img功能，支持以下功能：\n\n1. 根据webp支持程度，引用对应的图片\n\n2. 支持lazyload\n\n于是封装了vue image组件[vt-image](https://github.com/vue-tools/vt-image)， 旨在提升图片的性能。感兴趣可以查阅源码. 点击可查看[Demo](https://vue-tools.github.io/vt-image/#/demo)\n\n通过js判定支持webp：\n\n```javascript\nfunction detectWebp() {\n    var canvas, supportCanvas\n\n    canvas = document.createElement('canvas')\n    supportCanvas = canvas.getContext && canvas.getContext('2d')\n\n    if (supportCanvas) {\n        canvas.width = canvas.height = 1\n        return canvas.toDataURL('image/webp', 0.01).indexOf('image/webp') != -1\n    } else {\n        return false\n    }\n}\n```\n\n### 资源离线存储\n\n**使用 localStorage 做离线方案**\n\n关于localStorage的可以查看[知乎这篇讨论](https://www.zhihu.com/question/28467444)，详细说明了利弊\n\n**使用 service worker 做离线方案**\n\nwebpack插件[offline-plugin](https://github.com/NekR/offline-plugin)， 对webpack打包的资源做了service worker和AppCache以及兼容方案。\n\n另外一个[serviceworker-webpack-plugin](https://github.com/oliviertassinari/serviceworker-webpack-plugin)只处理`service worker`，`sw.js`也是自己处理，自定义和扩展比较方便。可以从`chrome network`查看效果：[Demo](https://vue-tools.github.io/vt-image/#/demo)\n\n### 总结\n\n问题和过程往往比结论更重要，站在巨人的肩膀上，吸收优点引用到自己的项目。如果没有符合需求的，根据 `场景`，考虑`成本`，`收益`，要么换条路走，要么就造个吧。\n\n如果您觉得 [webp-webpack-plugin](https://github.com/jiangtao/webp-webpack-plugin) 和 [vt-image](https://github.com/vue-tools/vt-image) 对您有用，star 和 提issue 将是对作者最好的鼓励。\n\n感谢您花了宝贵的时间阅读，如有错误，欢迎指正。\n\n转载请注明出处，谢谢！\n\n","slug":"vue-webp","published":1,"updated":"2018-02-12T02:31:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdjm44va0007ldvgg1ibxsk8","content":"<p>前段时间和朋友聊天，无意间问了一个<code>vue</code>移动端项目优化。针对老的项目怎么提升更好的性能。本人这方面经验不足，忙里偷闲研究了下淘宝，聚划算等网站。</p>\n<p>通过<code>network</code>抓包，对比分析得出几个显著的区别 <a id=\"more\"></a></p>\n<h2 id=\"调研结果\"><a href=\"#调研结果\" class=\"headerlink\" title=\"调研结果\"></a>调研结果</h2><ul>\n<li>支持webp，优先使用webp</li>\n<li>滚动加载图片</li>\n<li>资源离线存储</li>\n</ul>\n<h2 id=\"webp\"><a href=\"#webp\" class=\"headerlink\" title=\"webp\"></a>webp</h2><p>腾讯isux写了篇文章介绍webp，感兴趣同学可以<a href=\"https://isux.tencent.com/introduction-of-webp.html\" target=\"_blank\" rel=\"noopener\">查阅</a>， 总体来说，<br>同等质量的图片webp较小. 那么，如何接入webp到vue项目中。</p>\n<h3 id=\"接入webp，得先有webp\"><a href=\"#接入webp，得先有webp\" class=\"headerlink\" title=\"接入webp，得先有webp\"></a>接入webp，得先有webp</h3><p>生成webp的几种方式：</p>\n<h4 id=\"本地生成webp，上传到cdn\"><a href=\"#本地生成webp，上传到cdn\" class=\"headerlink\" title=\"本地生成webp，上传到cdn\"></a>本地生成webp，上传到cdn</h4><p>google提供了 <code>CWebp</code> 工具，方便开发者使用。<br>在现在的vue/react项目中， 以<code>webpack</code>做构建的项目居多，为了更方便的在webpack构建中接入webp，一个叫 <a href=\"https://github.com/jiangtao/webp-webpack-plugin\" target=\"_blank\" rel=\"noopener\">webp-webpack-plugin</a> 的插件诞生，感兴趣可以查阅源码。 该插件生成webp为：<strong>编译后的图.webp</strong> ， 如<br><code>vue.e3e41b1.jpg</code> ， <code>vue.e3e41b1.jpg.webp</code>。 将生成后的图片上传到cdn即可</p>\n<h4 id=\"cdn支持\"><a href=\"#cdn支持\" class=\"headerlink\" title=\"cdn支持\"></a>cdn支持</h4><p>cdn支持webp。图片上传到cdn之后，直接通过url规则访问图片即可得到webp</p>\n<h4 id=\"通过service-worker支持\"><a href=\"#通过service-worker支持\" class=\"headerlink\" title=\"通过service worker支持\"></a>通过service worker支持</h4><p>使用service worker拦截请求，改变图片的<code>content-type</code>为webp，使用浏览器对webp天然压缩做支持。 <a href=\"https://ppt.baomitu.com/\" target=\"_blank\" rel=\"noopener\">声享</a> 是通过这种方式实现的。</p>\n<h3 id=\"滚动加载图片\"><a href=\"#滚动加载图片\" class=\"headerlink\" title=\"滚动加载图片\"></a>滚动加载图片</h3><p>当我们有了原图和webp地址后，可以做进一步优化。滚动条<strong>滚动到可视区域内显示图片</strong> 。考虑到要做 <strong>webp的兼容方案</strong>，需要“动态”处理，在vue自定义一个 <code>Image</code> 重写现有的img功能，支持以下功能：</p>\n<ol>\n<li><p>根据webp支持程度，引用对应的图片</p>\n</li>\n<li><p>支持lazyload</p>\n</li>\n</ol>\n<p>于是封装了vue image组件<a href=\"https://github.com/vue-tools/vt-image\" target=\"_blank\" rel=\"noopener\">vt-image</a>， 旨在提升图片的性能。感兴趣可以查阅源码. 点击可查看<a href=\"https://vue-tools.github.io/vt-image/#/demo\" target=\"_blank\" rel=\"noopener\">Demo</a></p>\n<p>通过js判定支持webp：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">detectWebp</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> canvas, supportCanvas</span><br><span class=\"line\"></span><br><span class=\"line\">    canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>)</span><br><span class=\"line\">    supportCanvas = canvas.getContext &amp;&amp; canvas.getContext(<span class=\"string\">'2d'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (supportCanvas) &#123;</span><br><span class=\"line\">        canvas.width = canvas.height = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> canvas.toDataURL(<span class=\"string\">'image/webp'</span>, <span class=\"number\">0.01</span>).indexOf(<span class=\"string\">'image/webp'</span>) != <span class=\"number\">-1</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"资源离线存储\"><a href=\"#资源离线存储\" class=\"headerlink\" title=\"资源离线存储\"></a>资源离线存储</h3><p><strong>使用 localStorage 做离线方案</strong></p>\n<p>关于localStorage的可以查看<a href=\"https://www.zhihu.com/question/28467444\" target=\"_blank\" rel=\"noopener\">知乎这篇讨论</a>，详细说明了利弊</p>\n<p><strong>使用 service worker 做离线方案</strong></p>\n<p>webpack插件<a href=\"https://github.com/NekR/offline-plugin\" target=\"_blank\" rel=\"noopener\">offline-plugin</a>， 对webpack打包的资源做了service worker和AppCache以及兼容方案。</p>\n<p>另外一个<a href=\"https://github.com/oliviertassinari/serviceworker-webpack-plugin\" target=\"_blank\" rel=\"noopener\">serviceworker-webpack-plugin</a>只处理<code>service worker</code>，<code>sw.js</code>也是自己处理，自定义和扩展比较方便。可以从<code>chrome network</code>查看效果：<a href=\"https://vue-tools.github.io/vt-image/#/demo\" target=\"_blank\" rel=\"noopener\">Demo</a></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>问题和过程往往比结论更重要，站在巨人的肩膀上，吸收优点引用到自己的项目。如果没有符合需求的，根据 <code>场景</code>，考虑<code>成本</code>，<code>收益</code>，要么换条路走，要么就造个吧。</p>\n<p>如果您觉得 <a href=\"https://github.com/jiangtao/webp-webpack-plugin\" target=\"_blank\" rel=\"noopener\">webp-webpack-plugin</a> 和 <a href=\"https://github.com/vue-tools/vt-image\" target=\"_blank\" rel=\"noopener\">vt-image</a> 对您有用，star 和 提issue 将是对作者最好的鼓励。</p>\n<p>感谢您花了宝贵的时间阅读，如有错误，欢迎指正。</p>\n<p>转载请注明出处，谢谢！</p>\n","site":{"data":{}},"excerpt":"<p>前段时间和朋友聊天，无意间问了一个<code>vue</code>移动端项目优化。针对老的项目怎么提升更好的性能。本人这方面经验不足，忙里偷闲研究了下淘宝，聚划算等网站。</p>\n<p>通过<code>network</code>抓包，对比分析得出几个显著的区别","more":"</p>\n<h2 id=\"调研结果\"><a href=\"#调研结果\" class=\"headerlink\" title=\"调研结果\"></a>调研结果</h2><ul>\n<li>支持webp，优先使用webp</li>\n<li>滚动加载图片</li>\n<li>资源离线存储</li>\n</ul>\n<h2 id=\"webp\"><a href=\"#webp\" class=\"headerlink\" title=\"webp\"></a>webp</h2><p>腾讯isux写了篇文章介绍webp，感兴趣同学可以<a href=\"https://isux.tencent.com/introduction-of-webp.html\" target=\"_blank\" rel=\"noopener\">查阅</a>， 总体来说，<br>同等质量的图片webp较小. 那么，如何接入webp到vue项目中。</p>\n<h3 id=\"接入webp，得先有webp\"><a href=\"#接入webp，得先有webp\" class=\"headerlink\" title=\"接入webp，得先有webp\"></a>接入webp，得先有webp</h3><p>生成webp的几种方式：</p>\n<h4 id=\"本地生成webp，上传到cdn\"><a href=\"#本地生成webp，上传到cdn\" class=\"headerlink\" title=\"本地生成webp，上传到cdn\"></a>本地生成webp，上传到cdn</h4><p>google提供了 <code>CWebp</code> 工具，方便开发者使用。<br>在现在的vue/react项目中， 以<code>webpack</code>做构建的项目居多，为了更方便的在webpack构建中接入webp，一个叫 <a href=\"https://github.com/jiangtao/webp-webpack-plugin\" target=\"_blank\" rel=\"noopener\">webp-webpack-plugin</a> 的插件诞生，感兴趣可以查阅源码。 该插件生成webp为：<strong>编译后的图.webp</strong> ， 如<br><code>vue.e3e41b1.jpg</code> ， <code>vue.e3e41b1.jpg.webp</code>。 将生成后的图片上传到cdn即可</p>\n<h4 id=\"cdn支持\"><a href=\"#cdn支持\" class=\"headerlink\" title=\"cdn支持\"></a>cdn支持</h4><p>cdn支持webp。图片上传到cdn之后，直接通过url规则访问图片即可得到webp</p>\n<h4 id=\"通过service-worker支持\"><a href=\"#通过service-worker支持\" class=\"headerlink\" title=\"通过service worker支持\"></a>通过service worker支持</h4><p>使用service worker拦截请求，改变图片的<code>content-type</code>为webp，使用浏览器对webp天然压缩做支持。 <a href=\"https://ppt.baomitu.com/\" target=\"_blank\" rel=\"noopener\">声享</a> 是通过这种方式实现的。</p>\n<h3 id=\"滚动加载图片\"><a href=\"#滚动加载图片\" class=\"headerlink\" title=\"滚动加载图片\"></a>滚动加载图片</h3><p>当我们有了原图和webp地址后，可以做进一步优化。滚动条<strong>滚动到可视区域内显示图片</strong> 。考虑到要做 <strong>webp的兼容方案</strong>，需要“动态”处理，在vue自定义一个 <code>Image</code> 重写现有的img功能，支持以下功能：</p>\n<ol>\n<li><p>根据webp支持程度，引用对应的图片</p>\n</li>\n<li><p>支持lazyload</p>\n</li>\n</ol>\n<p>于是封装了vue image组件<a href=\"https://github.com/vue-tools/vt-image\" target=\"_blank\" rel=\"noopener\">vt-image</a>， 旨在提升图片的性能。感兴趣可以查阅源码. 点击可查看<a href=\"https://vue-tools.github.io/vt-image/#/demo\" target=\"_blank\" rel=\"noopener\">Demo</a></p>\n<p>通过js判定支持webp：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">detectWebp</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> canvas, supportCanvas</span><br><span class=\"line\"></span><br><span class=\"line\">    canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>)</span><br><span class=\"line\">    supportCanvas = canvas.getContext &amp;&amp; canvas.getContext(<span class=\"string\">'2d'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (supportCanvas) &#123;</span><br><span class=\"line\">        canvas.width = canvas.height = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> canvas.toDataURL(<span class=\"string\">'image/webp'</span>, <span class=\"number\">0.01</span>).indexOf(<span class=\"string\">'image/webp'</span>) != <span class=\"number\">-1</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"资源离线存储\"><a href=\"#资源离线存储\" class=\"headerlink\" title=\"资源离线存储\"></a>资源离线存储</h3><p><strong>使用 localStorage 做离线方案</strong></p>\n<p>关于localStorage的可以查看<a href=\"https://www.zhihu.com/question/28467444\" target=\"_blank\" rel=\"noopener\">知乎这篇讨论</a>，详细说明了利弊</p>\n<p><strong>使用 service worker 做离线方案</strong></p>\n<p>webpack插件<a href=\"https://github.com/NekR/offline-plugin\" target=\"_blank\" rel=\"noopener\">offline-plugin</a>， 对webpack打包的资源做了service worker和AppCache以及兼容方案。</p>\n<p>另外一个<a href=\"https://github.com/oliviertassinari/serviceworker-webpack-plugin\" target=\"_blank\" rel=\"noopener\">serviceworker-webpack-plugin</a>只处理<code>service worker</code>，<code>sw.js</code>也是自己处理，自定义和扩展比较方便。可以从<code>chrome network</code>查看效果：<a href=\"https://vue-tools.github.io/vt-image/#/demo\" target=\"_blank\" rel=\"noopener\">Demo</a></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>问题和过程往往比结论更重要，站在巨人的肩膀上，吸收优点引用到自己的项目。如果没有符合需求的，根据 <code>场景</code>，考虑<code>成本</code>，<code>收益</code>，要么换条路走，要么就造个吧。</p>\n<p>如果您觉得 <a href=\"https://github.com/jiangtao/webp-webpack-plugin\" target=\"_blank\" rel=\"noopener\">webp-webpack-plugin</a> 和 <a href=\"https://github.com/vue-tools/vt-image\" target=\"_blank\" rel=\"noopener\">vt-image</a> 对您有用，star 和 提issue 将是对作者最好的鼓励。</p>\n<p>感谢您花了宝贵的时间阅读，如有错误，欢迎指正。</p>\n<p>转载请注明出处，谢谢！</p>"},{"title":"xss live学习总结","date":"2017-09-13T11:55:00.000Z","issue":"https://github.com/jiangtao/blog/issues/7","_content":"\n朋友组织了一场`xss` live，`安全`一直是开发中不可忽视的一部分。而`xss`作为web开发中最常见的攻击手段，防范是必然的。基于**web浏览器tricks**，**JavaScript的发展**，**npm等开源项目漏洞**，**web注入**等会让开发者越来越防不胜防。\n\n本次总结基于耗子的[xss-demo](https://github.com/haozime/xss-demo)，以及自己对xss的理解和知识的吸收。感兴趣的同学可以先去试试，这里就不在累赘提供答案了。 欢迎探讨更多`Web安全`相关话题。\n\n<!--more-->\n\n### 插入执行标签\n\n* script\n* img onerror触发\n* iframe srcdoc触发\n\n### 标签等提前闭合(截断)\n\n* 如在`富文本`, `input`, `textarea`, 可编辑`div`等，对应xss-demo [0x01](https://xss.haozi.me/#/0x01), [0x02](https://xss.haozi.me/#/0x02)\n\n* style标签\n\n```\n<style>\n</style ><script>alert(1)</script>\n</style>\n```\n\n* 注释提前闭合[0x05](https://xss.haozi.me/#/0x05)\n```\n--!><script>alert(1)</script>\n```\n* input type重写[0x06](https://xss.haozi.me/#/0x06)\n\ninput的type，在type之前可以重写为image，通过`onerror`注入\n\n### ES6 tag标签\n\n```\n<script>alert`1`</script>\n```\n\n### 转义字符仍可执行\n\n* script标签可执行 `base64`的html代码片段\n* onerror可执行 转义为 html 10进制， 16进制的代码片段\n* url转义为 html 10进制， 16进制 仍可执行, url的定义可获取其他域下的资源文件\n\n```\nscheme:[//[user:password@]host[:port]][/]path[?query][#fragment]\n```\n### svg不闭合也执行\n\n查看 [0x07](https://xss.haozi.me/#/0x07)\n\n### 正则替换不靠谱\n\n* 正则替换 [0x0C](https://xss.haozi.me/#/0x0C)\n* 正则命中 [0x0E](https://xss.haozi.me/#/0x0E)\n* //追加执行，正则替换失效 [0x0F](https://xss.haozi.me/#/0x0F)\n\n### 防护\n\n* [配置安全头](https://imququ.com/post/web-security-and-response-header.html)\n* [xss监控](http://fex.baidu.com/blog/2014/06/xss-frontend-firewall-1/)\n* 服务端白名单过滤\n\n这样总结对我更好的理解，也明白为什么最后是通过替换不同的字符来做处理。 `Web安全`路很长，需要持续关注。\n\n","source":"_posts/xss-live.md","raw":"title: xss live学习总结\ndate: 2017-09-13 19:55:00\ntags: [xss]\nissue: https://github.com/jiangtao/blog/issues/7\n---\n\n朋友组织了一场`xss` live，`安全`一直是开发中不可忽视的一部分。而`xss`作为web开发中最常见的攻击手段，防范是必然的。基于**web浏览器tricks**，**JavaScript的发展**，**npm等开源项目漏洞**，**web注入**等会让开发者越来越防不胜防。\n\n本次总结基于耗子的[xss-demo](https://github.com/haozime/xss-demo)，以及自己对xss的理解和知识的吸收。感兴趣的同学可以先去试试，这里就不在累赘提供答案了。 欢迎探讨更多`Web安全`相关话题。\n\n<!--more-->\n\n### 插入执行标签\n\n* script\n* img onerror触发\n* iframe srcdoc触发\n\n### 标签等提前闭合(截断)\n\n* 如在`富文本`, `input`, `textarea`, 可编辑`div`等，对应xss-demo [0x01](https://xss.haozi.me/#/0x01), [0x02](https://xss.haozi.me/#/0x02)\n\n* style标签\n\n```\n<style>\n</style ><script>alert(1)</script>\n</style>\n```\n\n* 注释提前闭合[0x05](https://xss.haozi.me/#/0x05)\n```\n--!><script>alert(1)</script>\n```\n* input type重写[0x06](https://xss.haozi.me/#/0x06)\n\ninput的type，在type之前可以重写为image，通过`onerror`注入\n\n### ES6 tag标签\n\n```\n<script>alert`1`</script>\n```\n\n### 转义字符仍可执行\n\n* script标签可执行 `base64`的html代码片段\n* onerror可执行 转义为 html 10进制， 16进制的代码片段\n* url转义为 html 10进制， 16进制 仍可执行, url的定义可获取其他域下的资源文件\n\n```\nscheme:[//[user:password@]host[:port]][/]path[?query][#fragment]\n```\n### svg不闭合也执行\n\n查看 [0x07](https://xss.haozi.me/#/0x07)\n\n### 正则替换不靠谱\n\n* 正则替换 [0x0C](https://xss.haozi.me/#/0x0C)\n* 正则命中 [0x0E](https://xss.haozi.me/#/0x0E)\n* //追加执行，正则替换失效 [0x0F](https://xss.haozi.me/#/0x0F)\n\n### 防护\n\n* [配置安全头](https://imququ.com/post/web-security-and-response-header.html)\n* [xss监控](http://fex.baidu.com/blog/2014/06/xss-frontend-firewall-1/)\n* 服务端白名单过滤\n\n这样总结对我更好的理解，也明白为什么最后是通过替换不同的字符来做处理。 `Web安全`路很长，需要持续关注。\n\n","slug":"xss-live","published":1,"updated":"2018-02-12T02:31:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdjm44vc0009ldvg1uxu1whi","content":"<p>朋友组织了一场<code>xss</code> live，<code>安全</code>一直是开发中不可忽视的一部分。而<code>xss</code>作为web开发中最常见的攻击手段，防范是必然的。基于<strong>web浏览器tricks</strong>，<strong>JavaScript的发展</strong>，<strong>npm等开源项目漏洞</strong>，<strong>web注入</strong>等会让开发者越来越防不胜防。</p>\n<p>本次总结基于耗子的<a href=\"https://github.com/haozime/xss-demo\" target=\"_blank\" rel=\"noopener\">xss-demo</a>，以及自己对xss的理解和知识的吸收。感兴趣的同学可以先去试试，这里就不在累赘提供答案了。 欢迎探讨更多<code>Web安全</code>相关话题。</p>\n<a id=\"more\"></a>\n<h3 id=\"插入执行标签\"><a href=\"#插入执行标签\" class=\"headerlink\" title=\"插入执行标签\"></a>插入执行标签</h3><ul>\n<li>script</li>\n<li>img onerror触发</li>\n<li>iframe srcdoc触发</li>\n</ul>\n<h3 id=\"标签等提前闭合-截断\"><a href=\"#标签等提前闭合-截断\" class=\"headerlink\" title=\"标签等提前闭合(截断)\"></a>标签等提前闭合(截断)</h3><ul>\n<li><p>如在<code>富文本</code>, <code>input</code>, <code>textarea</code>, 可编辑<code>div</code>等，对应xss-demo <a href=\"https://xss.haozi.me/#/0x01\" target=\"_blank\" rel=\"noopener\">0x01</a>, <a href=\"https://xss.haozi.me/#/0x02\" target=\"_blank\" rel=\"noopener\">0x02</a></p>\n</li>\n<li><p>style标签</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">&lt;/style &gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>注释提前闭合<a href=\"https://xss.haozi.me/#/0x05\" target=\"_blank\" rel=\"noopener\">0x05</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--!&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>input type重写<a href=\"https://xss.haozi.me/#/0x06\" target=\"_blank\" rel=\"noopener\">0x06</a></p>\n</li>\n</ul>\n<p>input的type，在type之前可以重写为image，通过<code>onerror</code>注入</p>\n<h3 id=\"ES6-tag标签\"><a href=\"#ES6-tag标签\" class=\"headerlink\" title=\"ES6 tag标签\"></a>ES6 tag标签</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;alert`1`&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"转义字符仍可执行\"><a href=\"#转义字符仍可执行\" class=\"headerlink\" title=\"转义字符仍可执行\"></a>转义字符仍可执行</h3><ul>\n<li>script标签可执行 <code>base64</code>的html代码片段</li>\n<li>onerror可执行 转义为 html 10进制， 16进制的代码片段</li>\n<li>url转义为 html 10进制， 16进制 仍可执行, url的定义可获取其他域下的资源文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scheme:[//[user:password@]host[:port]][/]path[?query][#fragment]</span><br></pre></td></tr></table></figure>\n<h3 id=\"svg不闭合也执行\"><a href=\"#svg不闭合也执行\" class=\"headerlink\" title=\"svg不闭合也执行\"></a>svg不闭合也执行</h3><p>查看 <a href=\"https://xss.haozi.me/#/0x07\" target=\"_blank\" rel=\"noopener\">0x07</a></p>\n<h3 id=\"正则替换不靠谱\"><a href=\"#正则替换不靠谱\" class=\"headerlink\" title=\"正则替换不靠谱\"></a>正则替换不靠谱</h3><ul>\n<li>正则替换 <a href=\"https://xss.haozi.me/#/0x0C\" target=\"_blank\" rel=\"noopener\">0x0C</a></li>\n<li>正则命中 <a href=\"https://xss.haozi.me/#/0x0E\" target=\"_blank\" rel=\"noopener\">0x0E</a></li>\n<li>//追加执行，正则替换失效 <a href=\"https://xss.haozi.me/#/0x0F\" target=\"_blank\" rel=\"noopener\">0x0F</a></li>\n</ul>\n<h3 id=\"防护\"><a href=\"#防护\" class=\"headerlink\" title=\"防护\"></a>防护</h3><ul>\n<li><a href=\"https://imququ.com/post/web-security-and-response-header.html\" target=\"_blank\" rel=\"noopener\">配置安全头</a></li>\n<li><a href=\"http://fex.baidu.com/blog/2014/06/xss-frontend-firewall-1/\" target=\"_blank\" rel=\"noopener\">xss监控</a></li>\n<li>服务端白名单过滤</li>\n</ul>\n<p>这样总结对我更好的理解，也明白为什么最后是通过替换不同的字符来做处理。 <code>Web安全</code>路很长，需要持续关注。</p>\n","site":{"data":{}},"excerpt":"<p>朋友组织了一场<code>xss</code> live，<code>安全</code>一直是开发中不可忽视的一部分。而<code>xss</code>作为web开发中最常见的攻击手段，防范是必然的。基于<strong>web浏览器tricks</strong>，<strong>JavaScript的发展</strong>，<strong>npm等开源项目漏洞</strong>，<strong>web注入</strong>等会让开发者越来越防不胜防。</p>\n<p>本次总结基于耗子的<a href=\"https://github.com/haozime/xss-demo\" target=\"_blank\" rel=\"noopener\">xss-demo</a>，以及自己对xss的理解和知识的吸收。感兴趣的同学可以先去试试，这里就不在累赘提供答案了。 欢迎探讨更多<code>Web安全</code>相关话题。</p>","more":"<h3 id=\"插入执行标签\"><a href=\"#插入执行标签\" class=\"headerlink\" title=\"插入执行标签\"></a>插入执行标签</h3><ul>\n<li>script</li>\n<li>img onerror触发</li>\n<li>iframe srcdoc触发</li>\n</ul>\n<h3 id=\"标签等提前闭合-截断\"><a href=\"#标签等提前闭合-截断\" class=\"headerlink\" title=\"标签等提前闭合(截断)\"></a>标签等提前闭合(截断)</h3><ul>\n<li><p>如在<code>富文本</code>, <code>input</code>, <code>textarea</code>, 可编辑<code>div</code>等，对应xss-demo <a href=\"https://xss.haozi.me/#/0x01\" target=\"_blank\" rel=\"noopener\">0x01</a>, <a href=\"https://xss.haozi.me/#/0x02\" target=\"_blank\" rel=\"noopener\">0x02</a></p>\n</li>\n<li><p>style标签</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">&lt;/style &gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>注释提前闭合<a href=\"https://xss.haozi.me/#/0x05\" target=\"_blank\" rel=\"noopener\">0x05</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--!&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>input type重写<a href=\"https://xss.haozi.me/#/0x06\" target=\"_blank\" rel=\"noopener\">0x06</a></p>\n</li>\n</ul>\n<p>input的type，在type之前可以重写为image，通过<code>onerror</code>注入</p>\n<h3 id=\"ES6-tag标签\"><a href=\"#ES6-tag标签\" class=\"headerlink\" title=\"ES6 tag标签\"></a>ES6 tag标签</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;alert`1`&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"转义字符仍可执行\"><a href=\"#转义字符仍可执行\" class=\"headerlink\" title=\"转义字符仍可执行\"></a>转义字符仍可执行</h3><ul>\n<li>script标签可执行 <code>base64</code>的html代码片段</li>\n<li>onerror可执行 转义为 html 10进制， 16进制的代码片段</li>\n<li>url转义为 html 10进制， 16进制 仍可执行, url的定义可获取其他域下的资源文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scheme:[//[user:password@]host[:port]][/]path[?query][#fragment]</span><br></pre></td></tr></table></figure>\n<h3 id=\"svg不闭合也执行\"><a href=\"#svg不闭合也执行\" class=\"headerlink\" title=\"svg不闭合也执行\"></a>svg不闭合也执行</h3><p>查看 <a href=\"https://xss.haozi.me/#/0x07\" target=\"_blank\" rel=\"noopener\">0x07</a></p>\n<h3 id=\"正则替换不靠谱\"><a href=\"#正则替换不靠谱\" class=\"headerlink\" title=\"正则替换不靠谱\"></a>正则替换不靠谱</h3><ul>\n<li>正则替换 <a href=\"https://xss.haozi.me/#/0x0C\" target=\"_blank\" rel=\"noopener\">0x0C</a></li>\n<li>正则命中 <a href=\"https://xss.haozi.me/#/0x0E\" target=\"_blank\" rel=\"noopener\">0x0E</a></li>\n<li>//追加执行，正则替换失效 <a href=\"https://xss.haozi.me/#/0x0F\" target=\"_blank\" rel=\"noopener\">0x0F</a></li>\n</ul>\n<h3 id=\"防护\"><a href=\"#防护\" class=\"headerlink\" title=\"防护\"></a>防护</h3><ul>\n<li><a href=\"https://imququ.com/post/web-security-and-response-header.html\" target=\"_blank\" rel=\"noopener\">配置安全头</a></li>\n<li><a href=\"http://fex.baidu.com/blog/2014/06/xss-frontend-firewall-1/\" target=\"_blank\" rel=\"noopener\">xss监控</a></li>\n<li>服务端白名单过滤</li>\n</ul>\n<p>这样总结对我更好的理解，也明白为什么最后是通过替换不同的字符来做处理。 <code>Web安全</code>路很长，需要持续关注。</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjdjm44uy0000ldvg3iqyb1dk","tag_id":"cjdjm44v50004ldvgfuiqlhte","_id":"cjdjm44vf000cldvgfawtigiu"},{"post_id":"cjdjm44uy0000ldvg3iqyb1dk","tag_id":"cjdjm44vb0008ldvgzakwpwvh","_id":"cjdjm44vf000dldvgsmmylt4a"},{"post_id":"cjdjm44uy0000ldvg3iqyb1dk","tag_id":"cjdjm44ve000aldvgywk8athl","_id":"cjdjm44vf000fldvgtmojh1nu"},{"post_id":"cjdjm44v30002ldvgopvmbx1x","tag_id":"cjdjm44ve000bldvgt12lejz0","_id":"cjdjm44vg000hldvgk667mdm5"},{"post_id":"cjdjm44v30002ldvgopvmbx1x","tag_id":"cjdjm44vf000eldvg9pl8f86y","_id":"cjdjm44vg000ildvgzbf0chti"},{"post_id":"cjdjm44v70005ldvgcjx69a74","tag_id":"cjdjm44vg000gldvgn0ux6xg2","_id":"cjdjm44vg000lldvgctuwmn9f"},{"post_id":"cjdjm44v70005ldvgcjx69a74","tag_id":"cjdjm44vg000jldvgwg3qask5","_id":"cjdjm44vg000mldvgebq92u3a"},{"post_id":"cjdjm44v90006ldvgtwnk7dbv","tag_id":"cjdjm44vg000kldvgblo5gh9e","_id":"cjdjm44vh000pldvg9bdb7p6f"},{"post_id":"cjdjm44v90006ldvgtwnk7dbv","tag_id":"cjdjm44vh000nldvgbxcpm024","_id":"cjdjm44vh000qldvg7qd1bjom"},{"post_id":"cjdjm44va0007ldvgg1ibxsk8","tag_id":"cjdjm44vh000oldvg2djsyk8q","_id":"cjdjm44vj000tldvg2b2fww3s"},{"post_id":"cjdjm44va0007ldvgg1ibxsk8","tag_id":"cjdjm44vg000jldvgwg3qask5","_id":"cjdjm44vj000uldvgp0i052z0"},{"post_id":"cjdjm44vc0009ldvg1uxu1whi","tag_id":"cjdjm44vi000sldvg0u8qs8b6","_id":"cjdjm44vj000vldvgrsg9vl1g"}],"Tag":[{"name":"cli","_id":"cjdjm44v50004ldvgfuiqlhte"},{"name":"Node","_id":"cjdjm44vb0008ldvgzakwpwvh"},{"name":"脚手架","_id":"cjdjm44ve000aldvgywk8athl"},{"name":"npm","_id":"cjdjm44ve000bldvgt12lejz0"},{"name":"yarn","_id":"cjdjm44vf000eldvg9pl8f86y"},{"name":"mixin","_id":"cjdjm44vg000gldvgn0ux6xg2"},{"name":"vue","_id":"cjdjm44vg000jldvgwg3qask5"},{"name":"puppeteer","_id":"cjdjm44vg000kldvgblo5gh9e"},{"name":"crawler","_id":"cjdjm44vh000nldvgbxcpm024"},{"name":"webp","_id":"cjdjm44vh000oldvg2djsyk8q"},{"name":"xss","_id":"cjdjm44vi000sldvg0u8qs8b6"}]}}